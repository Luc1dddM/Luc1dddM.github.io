<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://luc1dddm.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://luc1dddm.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-06-10T15:49:24+00:00</updated><id>https://luc1dddm.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Recap Ki·∫øn Th·ª©c Tu·∫ßn 1 - AIO 2025</title><link href="https://luc1dddm.github.io/blog/2025/blog-week1/" rel="alternate" type="text/html" title="Recap Ki·∫øn Th·ª©c Tu·∫ßn 1 - AIO 2025"/><published>2025-06-09T00:00:00+00:00</published><updated>2025-06-09T00:00:00+00:00</updated><id>https://luc1dddm.github.io/blog/2025/blog-week1</id><content type="html" xml:base="https://luc1dddm.github.io/blog/2025/blog-week1/"><![CDATA[<h1 id="recap-ki·∫øn-th·ª©c-tu·∫ßn-1---aio-2025">Recap Ki·∫øn Th·ª©c Tu·∫ßn 1 - AIO 2025</h1> <p>üîñ <strong>M·ª•c l·ª•c nhanh</strong>:</p> <ul> <li><a href="#1-ki·∫øn-th·ª©c-c∆°-b·∫£n">1. Ki·∫øn th·ª©c c∆° b·∫£n</a> <ul> <li><a href="#11-ki·ªÉu-d·ªØ-li·ªáu">1.1. Ki·ªÉu d·ªØ li·ªáu</a></li> <li><a href="#12-danh-trong-python">1.2. Danh s√°ch trong Python</a></li> <li><a href="#13-t·ª´-ƒëi·ªÉn-trong-python">1.3. T·ª´ ƒëi·ªÉn trong python</a></li> <li><a href="#14-h√†m-trong-python">1.4. H√†m trong python</a></li> <li><a href="#15-r·∫Ω-nh√°nh-trong-python">1.5. R·∫Ω nh√°nh trong python</a></li> </ul> </li> <li><a href="#2-ki·∫øn-th·ª©c-m·ªü-r·ªông">2. Ki·∫øn th·ª©c m·ªü r·ªông</a> <ul> <li><a href="#21-SQL">2.1. SQL</a></li> <li><a href="#22-python-methodology">2.2. Python methodology</a></li> </ul> </li> <li><a href="#3-t·ªïng-k·∫øt">3. T·ªïng k·∫øt</a></li> </ul> <hr/> <h2 id="1-ki·∫øn-th·ª©c-c∆°-b·∫£n">1. Ki·∫øn Th·ª©c C∆° B·∫£n</h2> <h3 id="11-ki·ªÉu-d·ªØ-li·ªáu">1.1. Ki·ªÉu d·ªØ li·ªáu</h3> <ul> <li>C√°c ki·ªÉu d·ªØ li·ªáu l√† n·ªÅn t·∫£ng trong l·∫≠p tr√¨nh. Ch√∫ng x√°c ƒë·ªãnh lo·∫°i gi√° tr·ªã m√† m·ªôt bi·∫øn c√≥ th·ªÉ ch·ª©a.</li> <li>Trong Python, c√°c ki·ªÉu d·ªØ li·ªáu c∆° b·∫£n ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ l∆∞u tr·ªØ s·ªë, vƒÉn b·∫£n v√† gi√° tr·ªã logic.</li> </ul> <table> <thead> <tr> <th><strong>Ki·ªÉu D·ªØ li·ªáu</strong></th> <th><strong>M√¥ t·∫£</strong></th> <th><strong>V√≠ d·ª•</strong></th> </tr> </thead> <tbody> <tr> <td><code class="language-plaintext highlighter-rouge">Integer</code></td> <td>S·ªë nguy√™n</td> <td><code class="language-plaintext highlighter-rouge">1</code>, <code class="language-plaintext highlighter-rouge">-5</code>, <code class="language-plaintext highlighter-rouge">100</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">Float</code></td> <td>S·ªë th·∫≠p ph√¢n</td> <td><code class="language-plaintext highlighter-rouge">3.14</code>, <code class="language-plaintext highlighter-rouge">-0.01</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">String</code></td> <td>Chu·ªói k√Ω t·ª±</td> <td><code class="language-plaintext highlighter-rouge">"Xin ch√†o"</code>, <code class="language-plaintext highlighter-rouge">'Python'</code></td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">Boolean</code></td> <td>Gi√° tr·ªã logic: ƒë√∫ng ho·∫∑c sai</td> <td><code class="language-plaintext highlighter-rouge">True</code>, <code class="language-plaintext highlighter-rouge">False</code></td> </tr> </tbody> </table> <hr/> <h3 id="12-danh-s√°ch-trong-python">1.2. Danh s√°ch trong Python</h3> <ul> <li><strong>Danh s√°ch (list)</strong> l√† m·ªôt t·∫≠p h·ª£p ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ l∆∞u tr·ªØ nhi·ªÅu m·ª•c trong m·ªôt bi·∫øn duy nh·∫•t.</li> <li>C√≥ th·ªÉ ch·ª©a c√°c ph·∫ßn t·ª≠ thu·ªôc b·∫•t k·ª≥ ki·ªÉu d·ªØ li·ªáu n√†o</li> <li>C√°c ph·∫ßn t·ª≠ ƒë∆∞·ª£c <strong>s·∫Øp x·∫øp v√† c√≥ th·ªÉ thay ƒë·ªïi</strong></li> </ul> <p><strong>C√∫ ph√°p:</strong></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">t√™n_danh_s√°ch</span> <span class="o">=</span> <span class="p">[</span><span class="n">ph·∫ßn_t·ª≠1</span><span class="p">,</span> <span class="n">ph·∫ßn_t·ª≠2</span><span class="p">,</span> <span class="p">...,</span> <span class="n">ph·∫ßn_t·ª≠N</span><span class="p">]</span>
</code></pre></div></div> <p><strong>V√≠ d·ª•:</strong></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># T·∫°o danh s√°ch tr√°i c√¢y
</span><span class="n">fruits</span> <span class="o">=</span> <span class="p">[</span><span class="sh">"</span><span class="s">apple</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">banana</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">cherry</span><span class="sh">"</span><span class="p">]</span>
<span class="nf">print</span><span class="p">(</span><span class="n">fruits</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>  <span class="c1"># Output: apple
</span></code></pre></div></div> <hr/> <h3 id="13-t·ª´-ƒëi·ªÉn-trong-python">1.3. T·ª´ ƒëi·ªÉn trong Python</h3> <ul> <li><strong>T·ª´ ƒëi·ªÉn (dictionary)</strong> l√† m·ªôt t·∫≠p h·ª£p c√°c c·∫∑p kh√≥a-gi√° tr·ªã.</li> <li>M·ªói m·ª•c trong t·ª´ ƒëi·ªÉn c√≥ m·ªôt kh√≥a v√† m·ªôt gi√° tr·ªã, v√† kh√≥a ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ truy c·∫≠p gi√° tr·ªã.</li> <li>T·ª´ ƒëi·ªÉn l√† kh√¥ng c√≥ th·ª© t·ª±, c√≥ th·ªÉ thay ƒë·ªïi, v√† kh√¥ng cho ph√©p c√°c kh√≥a tr√πng l·∫∑p.</li> </ul> <p><strong>C√∫ ph√°p:</strong></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">t√™n_t·ª´_ƒëi·ªÉn</span> <span class="o">=</span> <span class="p">{</span><span class="n">kh√≥a1</span><span class="p">:</span> <span class="n">gi√°_tr·ªã1</span><span class="p">,</span> <span class="n">kh√≥a2</span><span class="p">:</span> <span class="n">gi√°_tr·ªã2</span><span class="p">,</span> <span class="p">...,</span> <span class="n">kh√≥aN</span><span class="p">:</span> <span class="n">gi√°_tr·ªãN</span><span class="p">}</span>
</code></pre></div></div> <p><strong>V√≠ d·ª•:</strong></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># T·∫°o t·ª´ ƒëi·ªÉn ch·ª©a th√¥ng tin h·ªçc sinh
</span><span class="n">student</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">"</span><span class="s">name</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Alice</span><span class="sh">"</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">age</span><span class="sh">"</span><span class="p">:</span> <span class="mi">20</span><span class="p">,</span>
    <span class="sh">"</span><span class="s">major</span><span class="sh">"</span><span class="p">:</span> <span class="sh">"</span><span class="s">Computer Science</span><span class="sh">"</span>
<span class="p">}</span>

<span class="c1"># Truy c·∫≠p gi√° tr·ªã b·∫±ng kh√≥a (key)
</span><span class="nf">print</span><span class="p">(</span><span class="n">student</span><span class="p">[</span><span class="sh">"</span><span class="s">name</span><span class="sh">"</span><span class="p">])</span>  <span class="c1"># Output: Alice
</span></code></pre></div></div> <hr/> <h3 id="14-h√†m-trong-python">1.4. H√†m trong python</h3> <ul> <li><strong>H√†m (function)</strong> l√† m·ªôt kh·ªëi m√£ c√≥ th·ªÉ t√°i s·ª≠ d·ª•ng ƒë·ªÉ th·ª±c hi·ªán m·ªôt nhi·ªám v·ª• c·ª• th·ªÉ.</li> <li>H√†m gi√∫p code c·ªßa b·∫°n ƒë∆∞·ª£c t·ªï ch·ª©c, d·ªÖ ƒë·ªçc v√† tr√°nh l·∫∑p l·∫°i.</li> </ul> <p><strong>C√∫ ph√°p:</strong></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">t√™n_h√†m</span><span class="p">(</span><span class="n">tham_s·ªë1</span><span class="p">,</span> <span class="n">tham_s·ªë2</span><span class="p">,</span> <span class="p">...,</span> <span class="n">tham_s·ªëN</span><span class="p">):</span>
    <span class="c1"># Kh·ªëi m√£ th·ª±c thi
</span>    <span class="k">return</span> <span class="n">gi√°_tr·ªã</span>  <span class="c1"># T√πy ch·ªçn
</span></code></pre></div></div> <p><strong>V√≠ d·ª•:</strong></p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># ƒê·ªãnh nghƒ©a 1 h√†m ƒë∆°n gi·∫£n
</span><span class="k">def</span> <span class="nf">greet</span><span class="p">():</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello!</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># G·ªçi l·∫°i h√†m ƒë·ªÉ th·ª±c thi
</span><span class="nf">greet</span><span class="p">()</span>  <span class="c1"># Output: Hello!
</span></code></pre></div></div> <p>H√†m c≈©ng c√≥ th·ªÉ nh·∫≠n <strong>tham s·ªë (parameters)</strong> v√† <strong>tr·∫£ v·ªÅ (return)</strong> gi√° tr·ªã b·∫±ng t·ª´ kh√≥a return:</p> <h5 id="h√†m-v·ªõi-tham-s·ªë-v√†-gi√°-tr·ªã-tr·∫£-v·ªÅ">H√†m v·ªõi tham s·ªë v√† gi√° tr·ªã tr·∫£ v·ªÅ</h5> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">sum</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span>

<span class="n">result</span> <span class="o">=</span> <span class="nf">sum</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>  <span class="c1"># Output: 8
</span></code></pre></div></div> <hr/> <h3 id="15-r·∫Ω-nh√°nh-trong-python">1.5. R·∫Ω nh√°nh trong python</h3> <ul> <li>R·∫Ω nh√°nh cho ph√©p ch∆∞∆°ng tr√¨nh ƒë∆∞a ra quy·∫øt ƒë·ªãnh d·ª±a tr√™n c√°c ƒëi·ªÅu ki·ªán.</li> <li>ƒêi·ªÅu n√†y th∆∞·ªùng ƒë∆∞·ª£c th·ª±c hi·ªán b·∫±ng c√°c c√¢u l·ªánh <strong>if</strong>, <strong>elif</strong>, v√† <strong>else</strong>.</li> </ul> <h4 id="151-to√°n-t·ª≠-so-s√°nh">1.5.1. To√°n t·ª≠ so s√°nh</h4> <p>To√°n t·ª≠ so s√°nh ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë·ªÉ so s√°nh hai gi√° tr·ªã. Tr·∫£ v·ªÅ gi√° tr·ªã Boolean: True ho·∫∑c False</p> <table> <thead> <tr> <th><strong>To√°n t·ª≠</strong></th> <th><strong>M√¥ t·∫£</strong></th> </tr> </thead> <tbody> <tr> <td><code class="language-plaintext highlighter-rouge">==</code></td> <td>B·∫±ng</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">!=</code></td> <td>Kh√¥ng b·∫±ng</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">&gt;</code></td> <td>L·ªõn h∆°n</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">&lt;</code></td> <td>Nh·ªè h∆°n</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">&gt;=</code></td> <td>L·ªõn h∆°n ho·∫∑c b·∫±ng</td> </tr> <tr> <td><code class="language-plaintext highlighter-rouge">&lt;=</code></td> <td>Nh·ªè h∆°n ho·∫∑c b·∫±ng</td> </tr> </tbody> </table> <h4 id="152-s·ª≠-d·ª•ng-c√¢u-l·ªánh-if">1.5.2. S·ª≠ d·ª•ng c√¢u l·ªánh if</h4> <p>C√¢u l·ªánh if cho ph√©p b·∫°n th·ª±c thi m√£ ch·ªâ khi m·ªôt ƒëi·ªÅu ki·ªán n√†o ƒë√≥ l√† <strong>True</strong>.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">age</span> <span class="o">=</span> <span class="mi">18</span>
<span class="k">if</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">18</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">You are an adult.</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <h4 id="153-s·ª≠-d·ª•ng-c√¢u-l·ªánh-if-else">1.5.3. S·ª≠ d·ª•ng c√¢u l·ªánh if-else</h4> <p>B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng else ƒë·ªÉ ƒë·ªãnh nghƒ©a m·ªôt kh·ªëi m√£ thay th·∫ø khi ƒëi·ªÅu ki·ªán kh√¥ng ƒë∆∞·ª£c ƒë√°p ·ª©ng.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">age</span> <span class="o">=</span> <span class="mi">16</span>
<span class="k">if</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">18</span><span class="p">:</span> <span class="c1">#False
</span>    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">You are an adult.</span><span class="sh">"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">You are a minor.</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <h4 id="154-s·ª≠-d·ª•ng-c√¢u-l·ªánh-elif">1.5.4. S·ª≠ d·ª•ng c√¢u l·ªánh elif</h4> <p>S·ª≠ d·ª•ng elif (else if) ƒë·ªÉ ki·ªÉm tra nhi·ªÅu ƒëi·ªÅu ki·ªán.</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">score</span> <span class="o">=</span> <span class="mi">75</span>
<span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">90</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Grade A</span><span class="sh">"</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">80</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Grade B</span><span class="sh">"</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">70</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Grade C</span><span class="sh">"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Grade D or lower</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <h3 id="16-v√≤ng-l·∫∑p-trong-python">1.6. V√≤ng l·∫∑p trong python</h3> <h4 id="ƒë·∫∑t-v·∫•n-ƒë·ªÅ">ƒê·∫∑t v·∫•n ƒë·ªÅ</h4> <p>V√≠ d·ª•, ch√∫ng ta ƒë∆∞·ª£c giao nhi·ªám v·ª• in d√≤ng ch·ªØ ‚ÄúHello World!‚Äù 5 l·∫ßn. Ta c√≥ th·ªÉ vi·∫øt:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <p>Nh∆∞ng n·∫øu ph·∫£i in 1000 hay 100000 l·∫ßn th√¨ sao? Vi·ªác copy-paste nh∆∞ tr√™n kh√¥ng c√≤n hi·ªáu qu·∫£. Gi·∫£i ph√°p t·ªëi ∆∞u l√† <strong>s·ª≠ d·ª•ng v√≤ng l·∫∑p</strong> ƒë·ªÉ th·ª±c hi·ªán thao t√°c l·∫∑p l·∫°i m·ªôt c√°ch hi·ªáu qu·∫£ h∆°n.</p> <h3 id="ƒë·ªãnh-nghƒ©a-v√≤ng-l·∫∑p">ƒê·ªãnh nghƒ©a v√≤ng l·∫∑p</h3> <p><strong>V√≤ng l·∫∑p</strong> cho ph√©p ch√∫ng ta <strong>l·∫∑p l·∫°i m·ªôt kh·ªëi m√£</strong> d·ª±a tr√™n m·ªôt ƒëi·ªÅu ki·ªán ho·∫∑c d·ª±a tr√™n c√°c ph·∫ßn t·ª≠ c·ªßa m·ªôt t·∫≠p h·ª£p.</p> <hr/> <h4 id="161-v√≤ng-l·∫∑p-for">1.6.1. V√≤ng l·∫∑p for</h4> <p>V√≤ng l·∫∑p <code class="language-plaintext highlighter-rouge">for</code> ƒë∆∞·ª£c d√πng ƒë·ªÉ l·∫∑p qua c√°c ph·∫ßn t·ª≠ c·ªßa m·ªôt <strong>ƒë·ªëi t∆∞·ª£ng l·∫∑p</strong> (<code class="language-plaintext highlighter-rouge">iterable</code>) nh∆∞ chu·ªói (string), danh s√°ch (list), tuple, dictionary, v.v.</p> <div class="row mt-3"> <div class="col-full mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Blog/Week1/ForLoop-480.webp 480w,/assets/img/Blog/Week1/ForLoop-800.webp 800w,/assets/img/Blog/Week1/ForLoop-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/Blog/Week1/ForLoop.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> H√¨nh 1: C√∫ ph√°p v√† lu·ªìng th·ª±c thi c·ªßa v√≤ng l·∫∑p `for`. </div> <h3 id="c√∫-ph√°p">C√∫ ph√°p</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># code tr∆∞·ªõc for
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">iterable</span><span class="p">:</span>
    <span class="c1"># kh·ªëi m√£ c·∫ßn th·ª±c thi
# code sau for
</span></code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">for</code>, <code class="language-plaintext highlighter-rouge">in</code>: l√† c√°c <strong>t·ª´ kh√≥a (keywords)</strong> c·ªßa Python.</li> <li><code class="language-plaintext highlighter-rouge">:</code> (d·∫•u hai ch·∫•m): <strong>b·∫Øt bu·ªôc</strong> sau ph·∫ßn ƒëi·ªÅu ki·ªán c·ªßa v√≤ng l·∫∑p.</li> <li><strong>Th·ª•t l·ªÅ (indentation)</strong>: x√°c ƒë·ªãnh kh·ªëi m√£ thu·ªôc v√≤ng l·∫∑p.</li> </ul> <h3 id="lu·ªìng-th·ª±c-thi">Lu·ªìng th·ª±c thi</h3> <ol> <li><strong>Code tr∆∞·ªõc for</strong> (n·∫øu c√≥) ƒë∆∞·ª£c th·ª±c thi ƒë·∫ßu ti√™n.</li> <li> <p>M·ªói l·∫ßn l·∫∑p:</p> <ul> <li>G√°n ph·∫ßn t·ª≠ hi·ªán t·∫°i cho bi·∫øn l·∫∑p <code class="language-plaintext highlighter-rouge">i</code>.</li> <li>Th·ª±c thi <strong>code b√™n trong v√≤ng l·∫∑p</strong>.</li> </ul> </li> <li>Sau khi k·∫øt th√∫c, <strong>code sau for</strong> (n·∫øu c√≥) s·∫Ω ƒë∆∞·ª£c th·ª±c thi.</li> </ol> <h3 id="s·ª≠-d·ª•ng-range">S·ª≠ d·ª•ng <code class="language-plaintext highlighter-rouge">range()</code></h3> <p><code class="language-plaintext highlighter-rouge">range(n)</code> t·∫°o ra m·ªôt d√£y s·ªë t·ª´ <code class="language-plaintext highlighter-rouge">0</code> ƒë·∫øn <code class="language-plaintext highlighter-rouge">n - 1</code>. V√≠ d·ª•:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <p>K·∫øt qu·∫£:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
1
2
3
4
</code></pre></div></div> <hr/> <h4 id="162-v√≤ng-l·∫∑p-while">1.6.2. V√≤ng l·∫∑p while</h4> <p>V√≤ng l·∫∑p <code class="language-plaintext highlighter-rouge">while</code> l·∫∑p l·∫°i <strong>mi·ªÖn l√† ƒëi·ªÅu ki·ªán v·∫´n ƒë√∫ng (<code class="language-plaintext highlighter-rouge">True</code>)</strong>.</p> <div class="row mt-3"> <div class="col-full mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Blog/Week1/WhileLoop-480.webp 480w,/assets/img/Blog/Week1/WhileLoop-800.webp 800w,/assets/img/Blog/Week1/WhileLoop-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/Blog/Week1/WhileLoop.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> H√¨nh 2: C√∫ ph√°p v√† lu·ªìng th·ª±c thi c·ªßa v√≤ng l·∫∑p `while`. </div> <h3 id="c√∫-ph√°p-1">C√∫ ph√°p</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># code tr∆∞·ªõc while
</span><span class="k">while</span> <span class="n">condition</span><span class="p">:</span>
    <span class="c1"># kh·ªëi m√£ c·∫ßn th·ª±c thi
# code sau while
</span></code></pre></div></div> <h3 id="lu·ªìng-th·ª±c-thi-1">Lu·ªìng th·ª±c thi</h3> <ol> <li><strong>Code tr∆∞·ªõc while</strong> ƒë∆∞·ª£c th·ª±c thi tr∆∞·ªõc (n·∫øu c√≥).</li> <li> <p>Trong m·ªói l·∫ßn l·∫∑p:</p> <ul> <li>N·∫øu ƒëi·ªÅu ki·ªán ƒë√∫ng, <strong>code trong while</strong> ƒë∆∞·ª£c ch·∫°y.</li> <li>Sau ƒë√≥ ki·ªÉm tra l·∫°i ƒëi·ªÅu ki·ªán.</li> </ul> </li> <li>Khi ƒëi·ªÅu ki·ªán tr·ªü th√†nh <strong>False</strong>, v√≤ng l·∫∑p k·∫øt th√∫c v√† <strong>code sau while</strong> (n·∫øu c√≥) s·∫Ω ƒë∆∞·ª£c th·ª±c thi.</li> </ol> <h3 id="v√≠-d·ª•">V√≠ d·ª•</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">done</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <p>K·∫øt qu·∫£:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
1
2
3
4
done
</code></pre></div></div> <hr/> <h2 id="break-v√†-continue-trong-v√≤ng-l·∫∑p"><code class="language-plaintext highlighter-rouge">break</code> v√† <code class="language-plaintext highlighter-rouge">continue</code> trong v√≤ng l·∫∑p</h2> <h3 id="break"><code class="language-plaintext highlighter-rouge">break</code></h3> <p><code class="language-plaintext highlighter-rouge">break</code> ƒë∆∞·ª£c d√πng ƒë·ªÉ <strong>tho√°t ho√†n to√†n kh·ªèi v√≤ng l·∫∑p</strong>, ngay c·∫£ khi ƒëi·ªÅu ki·ªán ho·∫∑c danh s√°ch ch∆∞a k·∫øt th√∫c.</p> <h4 id="v√≠-d·ª•-1">V√≠ d·ª•</h4> <p>T√¨m v·ªã tr√≠ ƒë·∫ßu ti√™n c·ªßa ph·∫ßn t·ª≠ c√≥ gi√° tr·ªã l√† 5:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">numbers</span><span class="p">)):</span>
    <span class="k">if</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Found 5 at index </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
        <span class="k">break</span>
</code></pre></div></div> <p><strong>Gi·∫£i th√≠ch:</strong> Khi t√¨m th·∫•y ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n b·∫±ng 5, v√≤ng l·∫∑p d·ª´ng ngay l·∫≠p t·ª©c nh·ªù <code class="language-plaintext highlighter-rouge">break</code>.</p> <hr/> <h3 id="continue"><code class="language-plaintext highlighter-rouge">continue</code></h3> <p><code class="language-plaintext highlighter-rouge">continue</code> ƒë∆∞·ª£c d√πng ƒë·ªÉ <strong>b·ªè qua ph·∫ßn c√≤n l·∫°i c·ªßa kh·ªëi m√£ trong l·∫ßn l·∫∑p hi·ªán t·∫°i</strong> v√† <strong>chuy·ªÉn sang l·∫ßn l·∫∑p ti·∫øp theo</strong>.</p> <h4 id="v√≠-d·ª•-2">V√≠ d·ª•</h4> <p>In c√°c s·ªë t·ª´ 1 ƒë·∫øn 10, <strong>b·ªè qua c√°c s·ªë ch·∫µn</strong>, d√πng <code class="language-plaintext highlighter-rouge">while</code>:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">continue</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <p><strong>Gi·∫£i th√≠ch:</strong> Khi g·∫∑p s·ªë ch·∫µn, <code class="language-plaintext highlighter-rouge">continue</code> khi·∫øn v√≤ng l·∫∑p b·ªè qua l·ªánh <code class="language-plaintext highlighter-rouge">print(i)</code> v√† quay l·∫°i ƒë·∫ßu v√≤ng l·∫∑p.</p> <p>K·∫øt qu·∫£:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1
3
5
7
9
</code></pre></div></div> <hr/> <h2 id="2-ki·∫øn-th·ª©c-m·ªü-r·ªông">2. Ki·∫øn Th·ª©c M·ªü R·ªông</h2> <h3 id="21-sql">2.1 SQL</h3> <h4 id="database-l√†-g√¨">Database l√† g√¨?</h4> <p>H√£y t∆∞·ªüng t∆∞·ª£ng m·ªôt database nh∆∞ m·ªôt th∆∞ vi·ªán kh·ªïng l·ªì ƒë∆∞·ª£c t·ªï ch·ª©c c·ª±c k·ª≥ khoa h·ªçc. Thay v√¨ s√°ch, ch√∫ng ta c√≥ d·ªØ li·ªáu. V√† thay v√¨ k·ªá s√°ch, ch√∫ng ta c√≥ c√°c <strong>b·∫£ng (tables)</strong>. M·ªói b·∫£ng ch·ª©a m·ªôt lo·∫°i th√¥ng tin c·ª• th·ªÉ, v√≠ d·ª•: m·ªôt b·∫£ng l∆∞u tr·ªØ th√¥ng tin kh√°ch h√†ng, m·ªôt b·∫£ng kh√°c l∆∞u tr·ªØ th√¥ng tin s·∫£n ph·∫©m, v√† m·ªôt b·∫£ng n·ªØa l√† l·ªãch s·ª≠ ƒë∆°n h√†ng.</p> <p>Trong m·ªói b·∫£ng, d·ªØ li·ªáu ƒë∆∞·ª£c s·∫Øp x·∫øp theo <strong>h√†ng (rows)</strong> v√† <strong>c·ªôt (columns)</strong>. M·ªói h√†ng l√† m·ªôt b·∫£n ghi duy nh·∫•t (v√≠ d·ª•: th√¥ng tin c·ªßa m·ªôt kh√°ch h√†ng c·ª• th·ªÉ), v√† m·ªói c·ªôt l√† m·ªôt thu·ªôc t√≠nh c·ªßa b·∫£n ghi ƒë√≥ (v√≠ d·ª•: t√™n, ƒë·ªãa ch·ªâ, s·ªë ƒëi·ªán tho·∫°i c·ªßa kh√°ch h√†ng).</p> <p>H·∫ßu h·∫øt c√°c database m√† ch√∫ng ta l√†m vi·ªác ng√†y nay l√† <strong>c∆° s·ªü d·ªØ li·ªáu quan h·ªá (relational databases)</strong>. ƒêi·ªÅu n√†y c√≥ nghƒ©a l√† c√°c b·∫£ng c√≥ th·ªÉ ƒë∆∞·ª£c li√™n k·∫øt v·ªõi nhau th√¥ng qua c√°c m·ªëi quan h·ªá logic, gi√∫p ch√∫ng ta d·ªÖ d√†ng k·∫øt h·ª£p th√¥ng tin t·ª´ nhi·ªÅu ngu·ªìn kh√°c nhau.</p> <hr/> <h4 id="sql-ng√¥n-ng·ªØ-giao-ti·∫øp-v·ªõi-d·ªØ-li·ªáu">SQL: Ng√¥n ng·ªØ giao ti·∫øp v·ªõi d·ªØ Li·ªáu</h4> <p>SQL l√† ng√¥n ng·ªØ ti√™u chu·∫©n ƒë·ªÉ giao ti·∫øp v·ªõi c∆° s·ªü d·ªØ li·ªáu quan h·ªá, chuy√™n bi·ªát cho c√°c t√°c v·ª• nh∆∞:</p> <ul> <li><strong>Truy v·∫•n d·ªØ li·ªáu:</strong> L·∫•y th√¥ng tin.</li> <li><strong>Thao t√°c d·ªØ li·ªáu:</strong> Th√™m, s·ª≠a, x√≥a d·ªØ li·ªáu.</li> <li><strong>ƒê·ªãnh nghƒ©a d·ªØ li·ªáu:</strong> X√¢y d·ª±ng c·∫•u tr√∫c database.</li> </ul> <p>SQL ƒë∆∞·ª£c s·ª≠ d·ª•ng r·ªông r√£i nh·ªù t√≠nh hi·ªáu qu·∫£ v√† kh·∫£ nƒÉng t∆∞∆°ng th√≠ch v·ªõi nhi·ªÅu h·ªá qu·∫£n tr·ªã c∆° s·ªü d·ªØ li·ªáu (MySQL, PostgreSQL, SQL Server, Oracle‚Ä¶).</p> <hr/> <h4 id="sql-trong-ph√¢n-t√≠ch-d·ªØ-li·ªáu">SQL trong ph√¢n t√≠ch d·ªØ li·ªáu</h4> <p>D·ª±a tr√™n c√°c k·ªπ nƒÉng c·∫ßn thi·∫øt cho Data Analysis, SQL ƒë∆∞·ª£c chia th√†nh 4 c·∫•p ƒë·ªô ch√≠nh:</p> <h5 id="1-basics-c∆°-b·∫£n">1. Basics (C∆° b·∫£n)</h5> <p>ƒê√¢y l√† nh·ªØng c√¢u l·ªánh n·ªÅn t·∫£ng ƒë·ªÉ tr√≠ch xu·∫•t v√† s·∫Øp x·∫øp d·ªØ li·ªáu.</p> <ul> <li><strong><code class="language-plaintext highlighter-rouge">SELECT</code></strong>: Ch·ªçn c·ªôt d·ªØ li·ªáu. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">customer_name</span><span class="p">,</span> <span class="n">email</span>
  <span class="k">FROM</span> <span class="n">customers</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">FROM</code></strong>: Ch·ªâ ƒë·ªãnh b·∫£ng ngu·ªìn. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="o">*</span>
  <span class="k">FROM</span> <span class="n">products</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">WHERE</code></strong>: L·ªçc h√†ng theo ƒëi·ªÅu ki·ªán. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">product_name</span><span class="p">,</span> <span class="n">price</span>
  <span class="k">FROM</span> <span class="n">products</span>
  <span class="k">WHERE</span> <span class="n">price</span> <span class="o">&gt;</span> <span class="mi">50</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">GROUP BY</code></strong>: Nh√≥m c√°c h√†ng ƒë·ªÉ t·ªïng h·ª£p. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">category</span><span class="p">,</span> <span class="k">COUNT</span><span class="p">(</span><span class="n">product_id</span><span class="p">)</span> <span class="k">AS</span> <span class="n">num_products</span>
  <span class="k">FROM</span> <span class="n">products</span>
  <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">category</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">ORDER BY</code></strong>: S·∫Øp x·∫øp k·∫øt qu·∫£. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">customer_name</span><span class="p">,</span> <span class="n">total_orders</span>
  <span class="k">FROM</span> <span class="n">customers</span>
  <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">total_orders</span> <span class="k">DESC</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">HAVING</code></strong>: L·ªçc c√°c nh√≥m ƒë√£ ƒë∆∞·ª£c t·ªïng h·ª£p. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">category</span><span class="p">,</span> <span class="k">AVG</span><span class="p">(</span><span class="n">price</span><span class="p">)</span> <span class="k">AS</span> <span class="n">avg_price</span>
  <span class="k">FROM</span> <span class="n">products</span>
  <span class="k">GROUP</span> <span class="k">BY</span> <span class="n">category</span>
  <span class="k">HAVING</span> <span class="k">AVG</span><span class="p">(</span><span class="n">price</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">100</span><span class="p">;</span>
</code></pre></div> </div> </li> </ul> <h5 id="2-intermediate-trung-c·∫•p">2. Intermediate (Trung c·∫•p)</h5> <p>N√¢ng cao kh·∫£ nƒÉng l·ªçc v√† x·ª≠ l√Ω d·ªØ li·ªáu v·ªõi c√°c to√°n t·ª≠ v√† h√†m.</p> <ul> <li><strong><code class="language-plaintext highlighter-rouge">BETWEEN</code></strong>: L·ªçc gi√° tr·ªã trong ph·∫°m vi. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">order_id</span><span class="p">,</span> <span class="n">order_date</span>
  <span class="k">FROM</span> <span class="n">orders</span>
  <span class="k">WHERE</span> <span class="n">order_date</span> <span class="k">BETWEEN</span> <span class="s1">'2025-01-01'</span> <span class="k">AND</span> <span class="s1">'2025-01-31'</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">LIKE</code></strong>: T√¨m ki·∫øm m·∫´u chu·ªói. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">customer_name</span><span class="p">,</span> <span class="n">email</span>
  <span class="k">FROM</span> <span class="n">customers</span>
  <span class="k">WHERE</span> <span class="n">customer_name</span> <span class="k">LIKE</span> <span class="s1">'Nguyen%'</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">NULL</code></strong>: Ki·ªÉm tra gi√° tr·ªã r·ªóng. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">product_name</span>
  <span class="k">FROM</span> <span class="n">products</span>
  <span class="k">WHERE</span> <span class="n">description</span> <span class="k">IS</span> <span class="k">NULL</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">IN</code></strong>: Ki·ªÉm tra gi√° tr·ªã trong danh s√°ch. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">product_name</span><span class="p">,</span> <span class="n">category</span>
  <span class="k">FROM</span> <span class="n">products</span>
  <span class="k">WHERE</span> <span class="n">category</span> <span class="k">IN</span> <span class="p">(</span><span class="s1">'Electronics'</span><span class="p">,</span> <span class="s1">'Books'</span><span class="p">);</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">OFFSET</code> / <code class="language-plaintext highlighter-rouge">LIMIT</code></strong>: Ph√¢n trang k·∫øt qu·∫£. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">customer_name</span>
  <span class="k">FROM</span> <span class="n">customers</span>
  <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">customer_id</span>
  <span class="k">LIMIT</span> <span class="mi">10</span> <span class="k">OFFSET</span> <span class="mi">20</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">COALESCE</code></strong>: Tr·∫£ v·ªÅ gi√° tr·ªã kh√¥ng <code class="language-plaintext highlighter-rouge">NULL</code> ƒë·∫ßu ti√™n. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">product_name</span><span class="p">,</span> <span class="n">COALESCE</span><span class="p">(</span><span class="n">description</span><span class="p">,</span> <span class="s1">'No description available'</span><span class="p">)</span> <span class="k">AS</span> <span class="n">product_description</span>
  <span class="k">FROM</span> <span class="n">products</span><span class="p">;</span>
</code></pre></div> </div> </li> </ul> <h5 id="3-joins-k·∫øt-n·ªëi-b·∫£ng">3. Joins (K·∫øt N·ªëi B·∫£ng)</h5> <p>K·ªπ nƒÉng thi·∫øt y·∫øu ƒë·ªÉ k·∫øt h·ª£p d·ªØ li·ªáu t·ª´ nhi·ªÅu b·∫£ng.</p> <ul> <li><strong><code class="language-plaintext highlighter-rouge">INNER JOIN</code></strong>: Tr·∫£ v·ªÅ h√†ng tr√πng kh·ªõp ·ªü c·∫£ hai b·∫£ng. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">o</span><span class="p">.</span><span class="n">order_id</span><span class="p">,</span> <span class="k">c</span><span class="p">.</span><span class="n">customer_name</span>
  <span class="k">FROM</span> <span class="n">orders</span> <span class="n">o</span>
  <span class="k">INNER</span> <span class="k">JOIN</span> <span class="n">customers</span> <span class="k">c</span> <span class="k">ON</span> <span class="n">o</span><span class="p">.</span><span class="n">customer_id</span> <span class="o">=</span> <span class="k">c</span><span class="p">.</span><span class="n">customer_id</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">LEFT JOIN</code></strong>: Tr·∫£ v·ªÅ t·∫•t c·∫£ h√†ng t·ª´ b·∫£ng tr√°i v√† c√°c h√†ng tr√πng kh·ªõp t·ª´ b·∫£ng ph·∫£i. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="k">c</span><span class="p">.</span><span class="n">customer_name</span><span class="p">,</span> <span class="n">o</span><span class="p">.</span><span class="n">order_id</span>
  <span class="k">FROM</span> <span class="n">customers</span> <span class="k">c</span>
  <span class="k">LEFT</span> <span class="k">JOIN</span> <span class="n">orders</span> <span class="n">o</span> <span class="k">ON</span> <span class="k">c</span><span class="p">.</span><span class="n">customer_id</span> <span class="o">=</span> <span class="n">o</span><span class="p">.</span><span class="n">customer_id</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">RIGHT JOIN</code></strong>: T∆∞∆°ng t·ª± <code class="language-plaintext highlighter-rouge">LEFT JOIN</code>, ∆∞u ti√™n b·∫£ng ph·∫£i. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">p</span><span class="p">.</span><span class="n">product_name</span><span class="p">,</span> <span class="n">oi</span><span class="p">.</span><span class="n">quantity</span>
  <span class="k">FROM</span> <span class="n">order_items</span> <span class="n">oi</span>
  <span class="k">RIGHT</span> <span class="k">JOIN</span> <span class="n">products</span> <span class="n">p</span> <span class="k">ON</span> <span class="n">oi</span><span class="p">.</span><span class="n">product_id</span> <span class="o">=</span> <span class="n">p</span><span class="p">.</span><span class="n">product_id</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">SELF JOIN</code></strong>: K·∫øt n·ªëi m·ªôt b·∫£ng v·ªõi ch√≠nh n√≥. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span> <span class="n">e1</span><span class="p">.</span><span class="n">employee_name</span> <span class="k">AS</span> <span class="n">employee</span><span class="p">,</span> <span class="n">e2</span><span class="p">.</span><span class="n">employee_name</span> <span class="k">AS</span> <span class="n">manager</span>
  <span class="k">FROM</span> <span class="n">employees</span> <span class="n">e1</span>
  <span class="k">JOIN</span> <span class="n">employees</span> <span class="n">e2</span> <span class="k">ON</span> <span class="n">e1</span><span class="p">.</span><span class="n">manager_id</span> <span class="o">=</span> <span class="n">e2</span><span class="p">.</span><span class="n">employee_id</span><span class="p">;</span>
</code></pre></div> </div> </li> </ul> <h5 id="4-advanced-n√¢ng-cao">4. Advanced (N√¢ng cao)</h5> <p>C√°c k·ªπ thu·∫≠t m·∫°nh m·∫Ω cho ph√¢n t√≠ch d·ªØ li·ªáu ph·ª©c t·∫°p.</p> <ul> <li><strong><code class="language-plaintext highlighter-rouge">WINDOW FUNCTIONS</code></strong>: Th·ª±c hi·ªán t√≠nh to√°n tr√™n m·ªôt t·∫≠p h·ª£p con c√°c h√†ng li√™n quan. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span>
      <span class="n">order_id</span><span class="p">,</span>
      <span class="n">total_amount</span><span class="p">,</span>
      <span class="k">AVG</span><span class="p">(</span><span class="n">total_amount</span><span class="p">)</span> <span class="n">OVER</span> <span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'month'</span><span class="p">,</span> <span class="n">order_date</span><span class="p">))</span> <span class="k">AS</span> <span class="n">monthly_avg_amount</span>
  <span class="k">FROM</span>
      <span class="n">orders</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">RANK()</code> / <code class="language-plaintext highlighter-rouge">DENSE_RANK()</code> / <code class="language-plaintext highlighter-rouge">ROW_NUMBER()</code></strong>: X·∫øp h·∫°ng c√°c h√†ng. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span>
      <span class="n">product_name</span><span class="p">,</span>
      <span class="n">category</span><span class="p">,</span>
      <span class="n">price</span><span class="p">,</span>
      <span class="n">RANK</span><span class="p">()</span> <span class="n">OVER</span> <span class="p">(</span><span class="k">PARTITION</span> <span class="k">BY</span> <span class="n">category</span> <span class="k">ORDER</span> <span class="k">BY</span> <span class="n">price</span> <span class="k">DESC</span><span class="p">)</span> <span class="k">AS</span> <span class="n">price_rank_in_category</span>
  <span class="k">FROM</span>
      <span class="n">products</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">PIVOT</code></strong>: Chuy·ªÉn ƒë·ªïi h√†ng th√†nh c·ªôt ƒë·ªÉ t·ªïng h·ª£p. (C√∫ ph√°p t√πy DBMS) <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">SELECT</span>
      <span class="n">ProductName</span><span class="p">,</span>
      <span class="p">[</span><span class="mi">2023</span><span class="p">]</span> <span class="k">AS</span> <span class="n">Sales_2023</span><span class="p">,</span> 
      <span class="p">[</span><span class="mi">2024</span><span class="p">]</span> <span class="k">AS</span> <span class="n">Sales_2024</span>  
  <span class="k">FROM</span>
      <span class="p">(</span>
          <span class="k">SELECT</span>
              <span class="n">p</span><span class="p">.</span><span class="n">ProductName</span><span class="p">,</span>
              <span class="nb">YEAR</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">SaleDate</span><span class="p">)</span> <span class="k">AS</span> <span class="n">SaleYear</span><span class="p">,</span>
              <span class="n">s</span><span class="p">.</span><span class="n">Quantity</span> <span class="k">AS</span> <span class="n">SoldQuantity</span>
          <span class="k">FROM</span>
              <span class="n">Products</span> <span class="n">p</span>
          <span class="k">JOIN</span>
              <span class="n">Sales</span> <span class="n">s</span> <span class="k">ON</span> <span class="n">p</span><span class="p">.</span><span class="n">ProductID</span> <span class="o">=</span> <span class="n">s</span><span class="p">.</span><span class="n">ProductID</span>
          <span class="k">WHERE</span>
              <span class="nb">YEAR</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">SaleDate</span><span class="p">)</span> <span class="k">IN</span> <span class="p">(</span><span class="mi">2023</span><span class="p">,</span> <span class="mi">2024</span><span class="p">)</span> 
      <span class="p">)</span> <span class="k">AS</span> <span class="n">SourceData</span>
  <span class="n">PIVOT</span>
  <span class="p">(</span>
      <span class="k">SUM</span><span class="p">(</span><span class="n">SoldQuantity</span><span class="p">)</span> 
      <span class="k">FOR</span> <span class="n">SaleYear</span> <span class="k">IN</span> <span class="p">([</span><span class="mi">2023</span><span class="p">],</span> <span class="p">[</span><span class="mi">2024</span><span class="p">])</span>
  <span class="p">)</span> <span class="k">AS</span> <span class="n">PivotedSalesByYear</span><span class="p">;</span>
</code></pre></div> </div> </li> <li><strong><code class="language-plaintext highlighter-rouge">CTE</code> (Common Table Expressions)</strong>: ƒê·ªãnh nghƒ©a c√°c t·∫≠p k·∫øt qu·∫£ t·∫°m th·ªùi ƒë·ªÉ d·ªÖ ƒë·ªçc v√† qu·∫£n l√Ω. <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">WITH</span> <span class="n">MonthlySales</span> <span class="k">AS</span> <span class="p">(</span>
      <span class="k">SELECT</span>
          <span class="n">DATE_TRUNC</span><span class="p">(</span><span class="s1">'month'</span><span class="p">,</span> <span class="n">order_date</span><span class="p">)</span> <span class="k">AS</span> <span class="n">sales_month</span><span class="p">,</span>
          <span class="k">SUM</span><span class="p">(</span><span class="n">quantity</span> <span class="o">*</span> <span class="n">price</span><span class="p">)</span> <span class="k">AS</span> <span class="n">total_monthly_sales</span>
      <span class="k">FROM</span>
          <span class="n">orders</span>
      <span class="k">GROUP</span> <span class="k">BY</span>
          <span class="n">sales_month</span>
  <span class="p">)</span>
  <span class="k">SELECT</span>
      <span class="n">sales_month</span><span class="p">,</span>
      <span class="n">total_monthly_sales</span>
  <span class="k">FROM</span>
      <span class="n">MonthlySales</span>
  <span class="k">WHERE</span>
      <span class="n">total_monthly_sales</span> <span class="o">&gt;</span> <span class="mi">10000</span><span class="p">;</span>
</code></pre></div> </div> </li> </ul> <h3 id="22-python-methodology">2.2 Python Methodology</h3> <h3 id="221-c∆°-b·∫£n-v·ªÅ-clean-code-v√†-pep-8">2.2.1: C∆† B·∫¢N V·ªÄ CLEAN CODE V√Ä PEP-8</h3> <h4 id="i-clean-code">I. Clean code</h4> <p>Clean code l√† m√£ ngu·ªìn r√µ r√†ng, d·ªÖ ƒë·ªçc, d·ªÖ b·∫£o tr√¨, c√≥ kh·∫£ nƒÉng m·ªü r·ªông v√† d·ªÖ d√†ng ki·ªÉm th·ª≠.</p> <ul> <li><strong>Readable (d·ªÖ ƒë·ªçc v√† d·ªÖ hi·ªÉu)</strong>: Code n√™n ƒë∆∞·ª£c vi·∫øt sao cho ng∆∞·ªùi kh√°c c√≥ th·ªÉ d·ªÖ d√†ng hi·ªÉu ƒë∆∞·ª£c m·ª•c ƒë√≠ch v√† c√°ch th·ª©c ho·∫°t ƒë·ªông.</li> <li><strong>Maintainable (d·ªÖ b·∫£o tr√¨)</strong>: Clean code n√™n d·ªÖ d√†ng s·ª≠a ƒë·ªïi, m·ªü r·ªông v√† t√°i s·ª≠ d·ª•ng m√† kh√¥ng g√¢y ra l·ªói ph·ª•.</li> <li><strong>Testable (d·ªÖ ki·ªÉm th·ª≠)</strong>: Code s·∫°ch n√™n ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ d·ªÖ d√†ng vi·∫øt unit test v√† th·ª±c hi·ªán ki·ªÉm th·ª≠ t·ª± ƒë·ªông.</li> <li><strong>Extensible (c√≥ kh·∫£ nƒÉng m·ªü r·ªông)</strong>: Code ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ d·ªÖ d√†ng th√™m t√≠nh nƒÉng m·ªõi m√† kh√¥ng c·∫ßn thay ƒë·ªïi code hi·ªán t·∫°i.</li> </ul> <h5 id="m·ª•c-ti√™u-c·ªßa-clean-code">M·ª•c ti√™u c·ªßa clean code</h5> <p>Clean code gi√∫p c√°c l·∫≠p tr√¨nh vi√™n d·ªÖ d√†ng l√†m vi·ªác v·ªõi n√≥ nh∆∞ s·ª≠a l·ªói, m·ªü r·ªông t√≠nh nƒÉng v√† t√°i s·ª≠ d·ª•ng.</p> <h5 id="l·ª£i-√≠ch-c·ªßa-clean-code">L·ª£i √≠ch c·ªßa clean code</h5> <p>Clean code gi√∫p tƒÉng hi·ªáu su·∫•t l√†m vi·ªác, c·∫£i thi·ªán h·ª£p t√°c nh√≥m v√† gi·∫£m chi ph√≠ b·∫£o tr√¨ d√†i h·∫°n</p> <ul> <li><strong>Gi·∫£m thi·ªÉu l·ªói</strong>: m√£ d·ªÖ ƒë·ªçc v√† d·ªÖ hi·ªÉu gi√∫p ph√°t hi·ªán v√† ngƒÉn ng·ª´a l·ªói hi·ªáu qu·∫£ h∆°n.</li> <li><strong>Gi·∫£m chi ph√≠ v√† th·ªùi gian ph√°t tri·ªÉn</strong>: m√£ s·∫°ch gi√∫p vi·ªác g·ª° l·ªói v√† ph√°t tri·ªÉn t√≠nh nƒÉng m·ªõi nhanh h∆°n.</li> <li><strong>TƒÉng hi·ªáu su·∫•t l√†m vi·ªác c·ªßa nh√≥m</strong>: khi m·ªçi th√†nh vi√™n trong nh√≥m ƒë·ªÅu hi·ªÉu v√† l√†m vi·ªác v·ªõi c√πng m·ªôt phong c√°ch clean code th√¨ h·ª£p t√°c s·∫Ω hi·ªáu qu·∫£ h∆°n v√† n·∫øu c√≥ ng∆∞·ªùi m·ªõi tham gia d·ª± √°n th√¨ c√≥ th·ªÉ nhanh ch√≥ng h√≤a nh·∫≠p v√† b·∫Øt ƒë·∫ßu ƒë√≥ng g√≥p v√†o d·ª± √°n.</li> <li><strong>D·ªÖ d√†ng m·ªü r·ªông</strong>: Clean code c√≥ c·∫•u tr√∫c r√µ r√†ng, d·ªÖ d√†ng th√™m t√≠nh nƒÉng m·ªõi m√† kh√¥ng l√†m ·∫£nh h∆∞·ªüng ƒë·∫øn h·ªá th·ªëng hi·ªán t·∫°i.</li> </ul> <h4 id="ii-pep-8">II. PEP-8</h4> <p><strong>PEP-8 (Python Enhancement Proposal 8)</strong> l√† <strong>ti√™u chu·∫©n ƒë·ªãnh d·∫°ng code Python ch√≠nh th·ª©c</strong>, do Guido van Rossum ‚Äì cha ƒë·∫ª c·ªßa Python ‚Äì t·∫°o ra. M·ª•c ti√™u c·ªßa PEP-8 l√† ƒë·∫£m b·∫£o <strong>t√≠nh nh·∫•t qu√°n v√† d·ªÖ ƒë·ªçc</strong> tr√™n to√†n d·ª± √°n, <strong>gi·∫£m l·ªói</strong>, v√† <strong>c·∫£i thi·ªán hi·ªáu qu·∫£ l√†m vi·ªác nh√≥m</strong>.</p> <h5 id="c√°c-quy-t·∫Øc-ch√≠nh-c·ªßa-pep-8-bao-g·ªìm">C√°c quy t·∫Øc ch√≠nh c·ªßa PEP-8 bao g·ªìm:</h5> <ul> <li><strong>Quy t·∫Øc ƒë·∫∑t t√™n (Naming Convention)</strong> <ul> <li><strong>Bi·∫øn/H√†m</strong>: snake_case (ch·ªØ th∆∞·ªùng, d·∫•u g·∫°ch d∆∞·ªõi)</li> <li><strong>Class</strong>: PascalCase (vi·∫øt hoa ch·ªØ c√°i ƒë·∫ßu m·ªói t·ª´)</li> <li><strong>H·∫±ng s·ªë</strong>: UPPER_CASE (t·∫•t c·∫£ ch·ªØ hoa, d·∫•u g·∫°ch d∆∞·ªõi)</li> </ul> </li> <li><strong>Th·ª•t l·ªÅ</strong>: Lu√¥n d√πng <strong>4 kho·∫£ng tr·∫Øng</strong> cho m·ªói c·∫•p th·ª•t l·ªÅ, kh√¥ng d√πng tab.</li> <li><strong>Kho·∫£ng tr·∫Øng</strong>: Th√™m kho·∫£ng tr·∫Øng hai b√™n ph√©p to√°n (a = b + c), sau d·∫•u ph·∫©y (f(a, b)) v√† kh√¥ng th√™m trong ngo·∫∑c.</li> <li><strong>Gi·ªõi h·∫°n ƒë·ªô d√†i d√≤ng code</strong>: T·ªëi ƒëa <strong>79 k√Ω t·ª±/d√≤ng</strong> cho m√£ ngu·ªìn v√† <strong>72 k√Ω t·ª±/d√≤ng</strong> cho docstring/comment</li> <li><strong>T·ªï ch·ª©c Import ƒë√∫ng chu·∫©n</strong>: S·∫Øp x·∫øp theo th·ª© t·ª±: th∆∞ vi·ªán chu·∫©n, th∆∞ vi·ªán b√™n th·ª© ba v√† module n·ªôi b·ªô</li> <li><strong>D√≤ng tr·∫Øng v√† c·∫•u tr√∫c h√†m/class</strong>: S·ª≠ d·ª•ng <strong>2 d√≤ng tr·∫Øng</strong> ƒë·ªÉ ph√¢n t√°ch c√°c ƒë·ªãnh nghƒ©a class v√† <strong>1 d√≤ng tr·∫Øng</strong> gi·ªØa c√°c h√†m/ph∆∞∆°ng th·ª©c trong class</li> </ul> <h5 id="t√†i-li·ªáu-h√≥a-documentation-v√†-c√¥ng-c·ª•-h·ªó-tr·ª£">T√†i li·ªáu h√≥a (Documentation) v√† C√¥ng c·ª• h·ªó tr·ª£</h5> <p>ƒê·ªÉ code d·ªÖ hi·ªÉu h∆°n, b·∫°n c·∫ßn t√†i li·ªáu h√≥a b·∫±ng <strong>docstring</strong> (ƒë·∫∑t trong c·∫∑p ba nh√°y k√©p ‚Äú‚Äù‚Äù sau ƒë·ªãnh nghƒ©a h√†m) v√† s·ª≠ d·ª•ng <strong>type hints</strong> (annotations). Docstring c√≥ th·ªÉ theo nhi·ªÅu ƒë·ªãnh d·∫°ng nh∆∞ Google style hay NumPy style v√† type hints gi√∫p ki·ªÉm tra ki·ªÉu d·ªØ li·ªáu tƒ©nh, ph√°t hi·ªán l·ªói s·ªõm.</p> <p>C√°c c√¥ng c·ª• ki·ªÉm tra v√† ƒë·ªãnh d·∫°ng code t·ª± ƒë·ªông gi√∫p tu√¢n th·ªß PEP-8 v√† Clean Code:</p> <ul> <li><strong>Flake8</strong>: Ki·ªÉm tra c√∫ ph√°p, style (PEP-8), ph√°t hi·ªán l·ªói logic v√† ƒë·ªô ph·ª©c t·∫°p</li> <li><strong>Black</strong>: ƒê·ªãnh d·∫°ng code t·ª± ƒë·ªông, chu·∫©n h√≥a style</li> <li><strong>Pylint</strong>: Ph√¢n t√≠ch tƒ©nh code, ƒë√°nh gi√° ch·∫•t l∆∞·ª£ng</li> <li><strong>Mypy</strong>: Ki·ªÉm tra ki·ªÉu d·ªØ li·ªáu tƒ©nh d·ª±a tr√™n type annotations.</li> </ul> <p>B√™n c·∫°nh ƒë√≥, c≈©ng n√™n t·ªï ch·ª©c d·ª± √°n Python theo c·∫•u tr√∫c chu·∫©n, bao g·ªìm c√°c th∆∞ m·ª•c cho m√£ ngu·ªìn (src/), ki·ªÉm th·ª≠ (tests/), t√†i li·ªáu (docs/), t√†i nguy√™n (resources/), v√† c√°c file c·∫•u h√¨nh nh∆∞ README.md, .gitignore</p> <h3 id="222-vi·∫øt-code-pythonic">2.2.2: VI·∫æT CODE PYTHONIC</h3> <p><strong>Code Pythonic</strong> nghƒ©a l√† t·∫≠n d·ª•ng t·ªëi ƒëa t√≠nh nƒÉng v√† ƒë·∫∑c ƒëi·ªÉm ri√™ng c·ªßa Python ƒë·ªÉ vi·∫øt code. Code Pythonic <strong>d·ªÖ ƒë·ªçc, d·ªÖ hi·ªÉu, ng·∫Øn g·ªçn nh∆∞ ƒë·ªçc ti·∫øng Anh</strong>, ƒë·ªìng th·ªùi tu√¢n th·ªß c√°c quy ∆∞·ªõc v√† tri·∫øt l√Ω c·ªßa Python</p> <h4 id="tri·∫øt-l√Ω-python-the-zen-of-python">Tri·∫øt l√Ω Python (The Zen of Python)</h4> <p>Tri·∫øt l√Ω n√†y, ƒë∆∞·ª£c Tim Peters vi·∫øt trong PEP 20, bao g·ªìm 19 nguy√™n t·∫Øc h∆∞·ªõng d·∫´n thi·∫øt k·∫ø Python. M·ªôt s·ªë nguy√™n t·∫Øc ti√™u bi·ªÉu l√†:</p> <ul> <li><strong>Beautiful is better than ugly</strong> (C√°i ƒë·∫πp t·ªët h∆°n c√°i x·∫•u).</li> <li><strong>Explicit is better than implicit</strong> (R√µ r√†ng t·ªët h∆°n ·∫©n √Ω).</li> <li><strong>Simple is better than complex</strong> (ƒê∆°n gi·∫£n t·ªët h∆°n ph·ª©c t·∫°p).</li> <li><strong>Complex is better than complicated</strong> (Ph·ª©c t·∫°p v·∫´n t·ªët h∆°n r·∫Øc r·ªëi).</li> <li><strong>Flat is better than nested</strong> (Ph·∫≥ng t·ªët h∆°n l·ªìng nhau).</li> </ul> <h4 id="c√°c-k·ªπ-thu·∫≠t-pythonic-ph·ªï-bi·∫øn">C√°c K·ªπ thu·∫≠t Pythonic Ph·ªï bi·∫øn</h4> <ul> <li><strong>Indexes v√† Slices</strong>: Cho ph√©p truy c·∫≠p v√† thao t√°c linh ho·∫°t v·ªõi c√°c ph·∫ßn t·ª≠ trong chu·ªói (list, tuple, string) b·∫±ng c√∫ ph√°p sequence[start:stop:step] <ul> <li>V√≠ d·ª•: data[::2] (ph·∫ßn t·ª≠ ch·∫µn), data[::-1] (ƒë·∫£o ng∆∞·ª£c)</li> </ul> </li> <li><strong>List, Dict, Set Comprehensions</strong>: Vi·∫øt code g·ªçn v√† nhanh h∆°n cho vi·ªác t·∫°o danh s√°ch, t·ª´ ƒëi·ªÉn, t·∫≠p h·ª£p. <ul> <li>V√≠ d·ª•: squares = [n**2 for n in numbers]</li> </ul> </li> <li><strong>Context Managers (v·ªõi with)</strong>: C∆° ch·∫ø qu·∫£n l√Ω t√†i nguy√™n, gi√∫p t·ª± ƒë·ªông gi·∫£i ph√≥ng t√†i nguy√™n (ƒë√≥ng file, k·∫øt n·ªëi DB) khi kh·ªëi l·ªánh k·∫øt th√∫c, ngay c·∫£ khi c√≥ l·ªói. <ul> <li>V√≠ d·ª•: with open(‚Äòfile.txt‚Äô, ‚Äòr‚Äô) as f:</li> <li>C√≥ th·ªÉ t·∫°o context manager ri√™ng v·ªõi decorator @contextmanager t·ª´ contextlib</li> </ul> </li> <li><strong>So S√°nh v√† ƒêi·ªÅu Ki·ªán - Pythonic Style</strong>: <ul> <li>So s√°nh v·ªõi None: D√πng is ho·∫∑c is not (if x is None) thay v√¨ ==</li> <li>So s√°nh Boolean: Kh√¥ng c·∫ßn so s√°nh t∆∞·ªùng minh (if is_active: thay v√¨ if is_active == True)</li> <li>Ki·ªÉm tra chu·ªói/list/dict r·ªóng: T·∫≠n d·ª•ng truthiness (if not my_list:)</li> <li>Ki·ªÉm tra trong collection: D√πng in (if item in my_list:)</li> <li>Chaining comparison: So s√°nh chu·ªói (if 0 &lt; x &lt;= 10:)</li> </ul> </li> <li><strong>Properties v√† d·∫•u underscore _</strong> <ul> <li>@property: Cho ph√©p s·ª≠ d·ª•ng method nh∆∞ thu·ªôc t√≠nh, gi√∫p code g·ªçn v√† d·ªÖ ki·ªÉm so√°t truy c·∫≠p.</li> <li>_var (Single Underscore): Quy ∆∞·ªõc cho bi·∫øn private ho·∫∑c ‚Äúinternal use‚Äù</li> <li>__var (Double Underscore): Name mangling, gi√∫p tr√°nh xung ƒë·ªôt khi k·∫ø th·ª´a</li> <li>__var (Double Underscore hai b√™n): D√†nh cho ph∆∞∆°ng th·ª©c ƒë·∫∑c bi·ªát (magic/dunder methods)</li> <li>_ (M·ªôt d·∫•u g·∫°ch d∆∞·ªõi): D√πng l√†m bi·∫øn t·∫°m kh√¥ng quan tr·ªçng</li> </ul> </li> </ul> <h3 id="223-nguy√™n-l√Ω-chung-ƒë·ªÉ-vi·∫øt-code-t·ªët">2.2.3: NGUY√äN L√ù CHUNG ƒê·ªÇ VI·∫æT CODE T·ªêT</h3> <p>Ph·∫ßn n√†y t·∫≠p trung v√†o c√°c nguy√™n l√Ω c·ªët l√µi gi√∫p t·∫°o ra m√£ b·ªÅn v·ªØng v√† d·ªÖ b·∫£o tr√¨</p> <ul> <li><strong>DRY (Don‚Äôt Repeat Yourself - ƒê·ª´ng l·∫∑p l·∫°i ch√≠nh m√¨nh)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: Tr√°nh l·∫∑p l·∫°i code, m·ªói ki·∫øn th·ª©c n√™n ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a m·ªôt l·∫ßn duy nh·∫•t</li> <li><strong>L·ª£i √≠ch</strong>: Gi·∫£m l·ªói, code ng·∫Øn g·ªçn, d·ªÖ b·∫£o tr√¨, tƒÉng kh·∫£ nƒÉng t√°i s·ª≠ d·ª•ng.</li> <li><strong>√Åp d·ª•ng</strong>: T√°ch c√°c ƒëo·∫°n code l·∫∑p l·∫°i th√†nh functions, classes, ho·∫∑c modules.</li> </ul> </li> <li><strong>YAGNI (You Aren‚Äôt Gonna Need It - B·∫°n s·∫Ω kh√¥ng c·∫ßn ƒë·∫øn n√≥)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: Kh√¥ng th√™m t√≠nh nƒÉng cho ƒë·∫øn khi th·ª±c s·ª± c·∫ßn thi·∫øt, tr√°nh ph·ª©c t·∫°p h√≥a kh√¥ng c·∫ßn thi·∫øt.</li> <li><strong>L·ª£i √≠ch</strong>: Tr√°nh l√£ng ph√≠ th·ªùi gian, gi·∫£m technical debt.</li> </ul> </li> <li><strong>KISS (Keep It Simple, Stupid - Gi·ªØ cho n√≥ ƒë∆°n gi·∫£n, ng·ªëc ngh·∫øch)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: Lu√¥n ∆∞u ti√™n c√°c gi·∫£i ph√°p ƒë∆°n gi·∫£n v√† d·ªÖ hi·ªÉu nh·∫•t.</li> <li><strong>L·ª£i √≠ch</strong>: Code d·ªÖ ƒë·ªçc, debug, b·∫£o tr√¨ v√† m·ªü r·ªông, gi·∫£m bug.</li> </ul> </li> <li><strong>Defensive Programming (L·∫≠p tr√¨nh ph√≤ng th·ªß)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: Lu√¥n gi·∫£ ƒë·ªãnh r·∫±ng s·∫Ω c√≥ l·ªói x·∫£y ra, ki·ªÉm tra ƒë·∫ßu v√†o v√† x·ª≠ l√Ω ngo·∫°i l·ªá.</li> <li><strong>L·ª£i √≠ch</strong>: T·∫°o code b·ªÅn v·ªØng, c√≥ kh·∫£ nƒÉng ·ª©ng ph√≥ v·ªõi t√¨nh hu·ªëng kh√¥ng l∆∞·ªùng tr∆∞·ªõc.</li> <li><strong>X·ª≠ l√Ω l·ªói</strong>: Lu√¥n b·∫Øt l·ªói c·ª• th·ªÉ thay v√¨ chung chung, s·ª≠ d·ª•ng logging thay v√¨ print, v√† t·∫°o custom exceptions khi c·∫ßn thi·∫øt.</li> </ul> </li> <li><strong>Separation of Concerns (Ph√¢n chia tr√°ch nhi·ªám)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: Ph√¢n chia code th√†nh c√°c module, class ho·∫∑c h√†m ri√™ng bi·ªát, m·ªói ph·∫ßn ch·ªâ ƒë·∫£m nhi·ªám m·ªôt ch·ª©c nƒÉng c·ª• th·ªÉ.</li> <li><strong>L·ª£i √≠ch</strong>: D·ªÖ b·∫£o tr√¨, d·ªÖ ki·ªÉm th·ª≠, tƒÉng kh·∫£ nƒÉng t√°i s·ª≠ d·ª•ng.</li> </ul> </li> </ul> <h3 id="224-nguy√™n-t·∫Øc-solid-v√†-design-patterns">2.2.4: NGUY√äN T·∫ÆC SOLID V√Ä DESIGN PATTERNS</h3> <p>C√°c nguy√™n t·∫Øc SOLID v√† Design Patterns l√† nh·ªØng c√¥ng c·ª• m·∫°nh m·∫Ω ƒë·ªÉ thi·∫øt k·∫ø h·ªá th·ªëng ph·∫ßn m·ªÅm c√≥ t√≠nh m·ªü r·ªông, linh ho·∫°t v√† d·ªÖ b·∫£o tr√¨.</p> <h4 id="gi·ªõi-thi·ªáu-nguy√™n-t·∫Øc-solid">Gi·ªõi thi·ªáu Nguy√™n t·∫Øc SOLID</h4> <p><strong>SOLID</strong> l√† m·ªôt t·∫≠p h·ª£p 5 nguy√™n t·∫Øc thi·∫øt k·∫ø h∆∞·ªõng ƒë·ªëi t∆∞·ª£ng ƒë∆∞·ª£c Robert C. Martin (Uncle Bob) ƒë∆∞a ra:</p> <ol> <li><strong>Single Responsibility Principle (SRP - Nguy√™n t·∫Øc Tr√°ch nhi·ªám ƒê∆°n l·∫ª)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: M·ªói l·ªõp ch·ªâ n√™n c√≥ <strong>m·ªôt l√Ω do ƒë·ªÉ thay ƒë·ªïi</strong>. T·∫≠p trung v√†o m·ªôt nhi·ªám v·ª• duy nh·∫•t.</li> <li><strong>√Åp d·ª•ng</strong>: Chia nh·ªè c√°c l·ªõp l·ªõn th√†nh c√°c module nh·ªè h∆°n, m·ªói module c√≥ m·ªôt tr√°ch nhi·ªám c·ª• th·ªÉ.</li> </ul> </li> <li><strong>Open/Closed Principle (OCP - Nguy√™n t·∫Øc M·ªü/ƒê√≥ng)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: M·ªü ƒë·ªÉ m·ªü r·ªông, ƒë√≥ng ƒë·ªÉ s·ª≠a ƒë·ªïi. Code n√™n d·ªÖ d√†ng th√™m ch·ª©c nƒÉng m·ªõi m√† kh√¥ng c·∫ßn s·ª≠a ƒë·ªïi code hi·ªán c√≥.</li> <li><strong>√Åp d·ª•ng</strong>: S·ª≠ d·ª•ng abstraction (ABC) v√† m·ªü r·ªông th√¥ng qua k·∫ø th·ª´a ho·∫∑c composition.</li> </ul> </li> <li><strong>Liskov Substitution Principle (LSP - Nguy√™n t·∫Øc Thay th·∫ø Liskov)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: C√°c l·ªõp con ph·∫£i thay th·∫ø ƒë∆∞·ª£c l·ªõp cha m√† kh√¥ng l√†m thay ƒë·ªïi t√≠nh ƒë√∫ng ƒë·∫Øn c·ªßa ch∆∞∆°ng tr√¨nh.</li> <li><strong>√Åp d·ª•ng</strong>: ƒê·∫£m b·∫£o h√†nh vi nh·∫•t qu√°n c·ªßa l·ªõp con so v·ªõi l·ªõp cha, tr√°nh th√™m c√°c ƒëi·ªÅu ki·ªán ti√™n quy·∫øt m·∫°nh h∆°n ho·∫∑c n√©m ra ngo·∫°i l·ªá m·ªõi.</li> </ul> </li> <li><strong>Interface Segregation Principle (ISP - Nguy√™n t·∫Øc Ph√¢n t√°ch Giao di·ªán)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: Nhi·ªÅu interface nh·ªè chuy√™n bi·ªát t·ªët h∆°n m·ªôt interface l·ªõn. Client kh√¥ng n√™n b·ªã bu·ªôc ph·ª• thu·ªôc v√†o c√°c ph∆∞∆°ng th·ª©c m√† h·ªç kh√¥ng s·ª≠ d·ª•ng.</li> <li><strong>√Åp d·ª•ng</strong>: T√°ch nh·ªè interface th√†nh c√°c interface chuy√™n bi·ªát, d√πng ABC ho·∫∑c typing.Protocol.</li> </ul> </li> <li><strong>Dependency Inversion Principle (DIP - Nguy√™n t·∫Øc ƒê·∫£o ng∆∞·ª£c S·ª± ph·ª• thu·ªôc)</strong> <ul> <li><strong>Nguy√™n t·∫Øc</strong>: C√°c module c·∫•p cao kh√¥ng n√™n ph·ª• thu·ªôc tr·ª±c ti·∫øp v√†o module c·∫•p th·∫•p, m√† c·∫£ hai n√™n ph·ª• thu·ªôc v√†o abstraction (interfaces/protocols).</li> <li><strong>√Åp d·ª•ng</strong>: D√πng Abstract Base Classes (ABC) ho·∫∑c typing.Protocol, ho·∫∑c ƒë∆°n gi·∫£n l√† duck typing.</li> </ul> </li> </ol> <h4 id="√°p-d·ª•ng-solid-v√†o-python">√Åp d·ª•ng SOLID v√†o Python</h4> <p>Python v·ªõi <strong>dynamic typing</strong> v√† <strong>duck typing</strong> h·ªó tr·ª£ r·∫•t t·ªët cho vi·ªác √°p d·ª•ng SOLID. Module abc (Abstract Base Classes) v√† typing.Protocol gi√∫p ƒë·ªãnh nghƒ©a interface r√µ r√†ng, trong khi <strong>composition over inheritance</strong> khuy·∫øn kh√≠ch vi·ªác k·∫øt h·ª£p c√°c ƒë·ªëi t∆∞·ª£ng nh·ªè ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c SRP v√† gi·∫£m ph·ª• thu·ªôc.</p> <h4 id="c√°c-design-patterns-ph·ªï-bi·∫øn">C√°c Design Patterns Ph·ªï Bi·∫øn</h4> <p>Design Patterns l√† c√°c gi·∫£i ph√°p t√°i s·ª≠ d·ª•ng cho c√°c v·∫•n ƒë·ªÅ thi·∫øt k·∫ø ph·∫ßn m·ªÅm ph·ªï bi·∫øn. Ch√∫ng ƒë∆∞·ª£c chia th√†nh ba nh√≥m ch√≠nh:</p> <ul> <li><strong>Creational Patterns (M·∫´u Kh·ªüi t·∫°o)</strong>: Li√™n quan ƒë·∫øn vi·ªác t·∫°o ƒë·ªëi t∆∞·ª£ng m·ªôt c√°ch linh ho·∫°t. <ul> <li><strong>Factory Pattern</strong>: T·∫°o ƒë·ªëi t∆∞·ª£ng m√† kh√¥ng c·∫ßn bi·∫øt l·ªõp con c·ª• th·ªÉ, ·∫©n logic ph·ª©c t·∫°p.</li> <li><strong>Singleton Pattern</strong>: Ch·ªâ t·∫°o duy nh·∫•t m·ªôt instance c·ªßa m·ªôt l·ªõp, th∆∞·ªùng d√πng cho logging, database.</li> </ul> </li> <li><strong>Structural Patterns (M·∫´u C·∫•u tr√∫c)</strong>: X√°c ƒë·ªãnh m·ªëi quan h·ªá gi·ªØa c√°c ƒë·ªëi t∆∞·ª£ng. <ul> <li><strong>Adapter Pattern</strong>: Cho ph√©p c√°c interface kh√¥ng t∆∞∆°ng th√≠ch l√†m vi·ªác v·ªõi nhau.</li> <li><strong>Decorator Pattern</strong>: Th√™m ch·ª©c nƒÉng m·ªõi cho ƒë·ªëi t∆∞·ª£ng m√† kh√¥ng s·ª≠a ƒë·ªïi c·∫•u tr√∫c hi·ªán c√≥.</li> </ul> </li> <li><strong>Behavioral Patterns (M·∫´u H√†nh vi)</strong>: X√°c ƒë·ªãnh c√°ch giao ti·∫øp gi·ªØa c√°c ƒë·ªëi t∆∞·ª£ng. <ul> <li><strong>Command Pattern</strong>: ƒê√≥ng g√≥i y√™u c·∫ßu nh∆∞ m·ªôt ƒë·ªëi t∆∞·ª£ng, cho ph√©p tham s·ªë h√≥a client v·ªõi c√°c ho·∫°t ƒë·ªông kh√°c nhau.</li> <li><strong>Template Method Pattern</strong>: ƒê·ªãnh nghƒ©a khung thu·∫≠t to√°n trong m·ªôt ph∆∞∆°ng th·ª©c, cho ph√©p c√°c l·ªõp con ƒë·ªãnh nghƒ©a l·∫°i c√°c b∆∞·ªõc c·ª• th·ªÉ m√† kh√¥ng thay ƒë·ªïi c·∫•u tr√∫c thu·∫≠t to√°n.</li> </ul> </li> </ul> <p>ƒê·ªÉ s·ª≠ d·ª•ng Design Patterns hi·ªáu qu·∫£, b·∫°n c·∫ßn <strong>n·∫Øm v·ªØng 5 nguy√™n t·∫Øc SOLID</strong>, <strong>s·ª≠ d·ª•ng Design Patterns ph√π h·ª£p</strong> v·ªõi v·∫•n ƒë·ªÅ c·∫ßn gi·∫£i quy·∫øt, <strong>√°p d·ª•ng SOLID v√†o Python</strong> b·∫±ng c√°ch t·∫≠n d·ª•ng c√°c ƒë·∫∑c ƒëi·ªÉm c·ªßa ng√¥n ng·ªØ, v√† quan tr·ªçng nh·∫•t l√† <strong>tr√°nh l·∫°m d·ª•ng</strong> ch√∫ng.</p> <h3 id="23-skill-for-aio-2025">2.3. SKILL FOR AIO 2025</h3> <blockquote> <p>D∆∞·ªõi s·ª± t√°c ƒë·ªông m·∫°nh m·∫Ω c·ªßa Tr√≠ tu·ªá nh√¢n t·∫°o trong vi·ªác h·ªó tr·ª£ trong h·ªçc t·∫≠p, l√†m vi·ªác ƒë√≤i h·ªèi m·ªói ng∆∞·ªùi c·∫ßn kh·∫£ nƒÉng s·ªü h·ªØu nh·ªØng k·ªπ nƒÉng c·∫ßn thi·∫øt trong vi·ªác nghi√™n c·ª©u, h·ªçc t·∫≠p trong qu√° tr√¨nh h·ªçc kh√≥a AIO 2025. ‚ÄúSKILL FOR AIO 2025‚Äù s·∫Ω cung c·∫•p c√°c k·ªπ nƒÉng c·∫ßn thi·∫øt, l·ªô tr√¨nh h·ªçc t·∫≠p hi·ªáu qu·∫£ v√† ph∆∞∆°ng ph√°p ti·∫øp c·∫≠n th·ª±c t·∫ø ƒë·ªÉ chinh ph·ª•c kh√≥a h·ªçc.</p> </blockquote> <h3 id="c√°ch-t√¨m-ki·∫øm-t√†i-li·ªáu-h·ªçc-thu·∫≠t">C√°ch T√¨m Ki·∫øm T√†i Li·ªáu H·ªçc Thu·∫≠t</h3> <h4 id="t√¨m-ki·∫øm-c√°c-t√†i-li·ªáu-th√¥ng-qua-c√°c-website-uy-t√≠n-nh∆∞">T√¨m ki·∫øm c√°c t√†i li·ªáu th√¥ng qua c√°c website uy t√≠n nh∆∞:</h4> <ul> <li><strong>Google Scholar</strong></li> </ul> <div class="row mt-3"> <div class="col-full mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Blog/Week1/GoogleScholar-480.webp 480w,/assets/img/Blog/Week1/GoogleScholar-800.webp 800w,/assets/img/Blog/Week1/GoogleScholar-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/Blog/Week1/GoogleScholar.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> H√¨nh 3: Giao di·ªán Google Scholar. </div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- T√¨m ki·∫øm b√†i b√°o, s√°ch, lu·∫≠n vƒÉn v·ªÅ AI.
- B·ªï sung c√°c ki·∫øn th·ª©c ngo√†i t√†i li·ªáu c·ªßa kh√≥a h·ªçc.
- Nhanh g·ªçn v·ªÅ c√°c nghi√™n c·ª©u m·ªõi nh·∫•t.
</code></pre></div></div> <ul> <li><strong>Papers With Code</strong></li> </ul> <div class="row mt-3"> <div class="col-full mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Blog/Week1/PaperWithCode-480.webp 480w,/assets/img/Blog/Week1/PaperWithCode-800.webp 800w,/assets/img/Blog/Week1/PaperWithCode-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/Blog/Week1/PaperWithCode.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> H√¨nh 4: Giao di·ªán Papers With Code. </div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- T√¨m b√†i b√°o k√®m m√£ ngu·ªìn th·ª±c nghi·ªám, r·∫•t h·ªØu √≠ch ƒë·ªÉ h·ªçc thu·∫≠t to√°n m·ªõi.
- Cung c·∫•p c√°c Dataset ph·ªï bi·∫øn theo t·ª´ng ch·ªß ƒë·ªÅ, c√°c SOTA c·ªßa t·ª´ng ph∆∞∆°ng th·ª©c.
</code></pre></div></div> <ul> <li><strong>Group AIO-QAs-Verified</strong></li> </ul> <div class="row mt-3"> <div class="col-full mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Blog/Week1/AIOGroup-480.webp 480w,/assets/img/Blog/Week1/AIOGroup-800.webp 800w,/assets/img/Blog/Week1/AIOGroup-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/Blog/Week1/AIOGroup.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> H√¨nh 4: Group FB AIO-QAs-Verified. </div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>- H·ªó tr·ª£ gi·∫£i ƒë√°p th·∫Øc m·∫Øc ho·∫∑c c√°c v·∫•n ƒë·ªÅ trong qu√° tr√¨nh h·ªçc t·∫≠p, nghi√™n c·ª©u.
- K·∫øt n·ªëi v√† chia s·∫ª c√°c c∆° h·ªôi h·ªçc t·∫≠p v√† l√†m vi·ªác cho th√†nh vi√™n trong c·ªông ƒë·ªìng AIO.
</code></pre></div></div> <hr/> <h3 id="s·ª≠-d·ª•ng-c√°c-c√¥ng-c·ª•-trong-qu√°-tr√¨nh-h·ªçc-t·∫≠pnghi√™n-c·ª©u">S·ª≠ d·ª•ng c√°c c√¥ng c·ª• trong qu√° tr√¨nh h·ªçc t·∫≠p/nghi√™n c·ª©u</h3> <h4 id="ƒë·ªçc-t√†i-li·ªáu-v√†-papers">ƒê·ªçc t√†i li·ªáu v√† Papers</h4> <ul> <li><strong>S·ª≠ d·ª•ng ChatGPT ho·∫∑c c√°c c√¥ng c·ª• t∆∞∆°ng t·ª±</strong> nh∆∞ perplexity, Gemini ƒë·ªÉ t·∫°o ra guidelines cho k·ªπ nƒÉng ƒë·ªçc ho·∫∑c Research Plan: <ul> <li><strong>T·∫°o Reading Skill Paper v·ªõi perplexity</strong></li> <li><strong>T·∫°o Research Plan v·ªõi ChatGPT</strong></li> </ul> </li> <li> <p><strong>Flow ƒë·ªçc Papers hi·ªáu qu·∫£</strong> v·ªõi kinh nghi·ªám c·ªßa TA ƒê√¨nh Vinh</p> </li> <li><strong>S·ª≠ d·ª•ng c√¥ng c·ª• NotebookLM</strong> c√πng v·ªõi k·ªπ nƒÉng prompting h·ªó tr·ª£ cho vi·ªác ƒë·ªçc paper/document.</li> </ul> <h4 id="hi·ªán-th·ª±c-code">Hi·ªán th·ª±c Code</h4> <ul> <li><strong>Jupyter Notebook</strong> <ul> <li>S·ª≠ d·ª•ng th√¥ng qua Anaconda Navigator, Pycharm.</li> <li>Ch·ªâ ph√π h·ª£p v·ªõi c√°c m√°y c√≥ t√†i nguy√™n l·ªõn ƒë·ªÉ ch·∫°y c√°c ch∆∞∆°ng tr√¨nh l·ªõn nh∆∞ Qu√° tr√¨nh training model c√≥ th·ªÉ m·∫•t h√†ng th√°ng.</li> </ul> </li> <li><strong>Google Colab</strong> <ul> <li><strong>C√¥ng c·ª• l·∫≠p tr√¨nh Online v·ªõi t√†i nguy√™n mi·ªÖn ph√≠ (GPU, TPU, ‚Ä¶.)</strong></li> <li><strong>H·ªó tr·ª£ ch·∫°y nhanh h∆°n trong qu√° tr√¨nh Ch·∫°y ch∆∞∆°ng tr√¨nh.</strong></li> <li><strong>C√≥ th·ªÉ L∆∞u tr·ªØ trong Google Drive.</strong></li> <li><strong>S·ª≠ d·ª•ng Gemini trong coding trong Colab</strong></li> </ul> </li> <li> <p><strong>H·ªó tr·ª£ Code</strong></p> <p>Ngo√†i Gemini h·ªó tr·ª£ trong Colab, c√°c c√¥ng c·ª• AI kh√°c th·ªÉ hi·ªán hi·ªáu qu·∫£ m·∫°nh m·∫Ω gi√∫p ƒë·ªçc hi·ªÉu v√† x·ª≠ l√Ω Code nh∆∞ Claude(Opus 4, Sonnet 4), Grok(Grok 3),‚Ä¶</p> </li> </ul> <h4 id="x√¢y-d·ª±ng-t√†i-li·ªáu">X√¢y d·ª±ng t√†i li·ªáu</h4> <ul> <li><strong>S·ª≠ d·ª•ng Latex th√¥ng qua c√¥ng c·ª• online Overleaf</strong> <ul> <li>Ph√π h·ª£p v·ªõi nghi√™n c·ª©u khoa h·ªçc.</li> <li>Ch·ªânh s·ª≠a t√†i li·ªáu tr·ª±c ti·∫øp v·ªõi nhi·ªÅu ng∆∞·ªùi tham gia.</li> <li> <h2 id="h·ªó-tr·ª£-format-ch·ªân-chu-cho-c√°c-c√¥ng-th·ª©c-to√°n-h·ªçc-ti√™u-ƒë·ªÅ-v√†-ch·ªâ-m·ª•c">H·ªó tr·ª£ format ch·ªân chu cho c√°c c√¥ng th·ª©c to√°n h·ªçc, ti√™u ƒë·ªÅ v√† ch·ªâ m·ª•c.</h2> </li> </ul> </li> </ul> <h3 id="k·∫øt-lu·∫≠n">K·∫øt Lu·∫≠n</h3> <p>SKILL FOR AIO 2025 l√† thi·∫øt y·∫øu gi√∫p qu√° tr√¨nh h·ªçc t·∫≠p, nghi√™n c·ª©u v·ªõi vi·ªác n·∫Øm r√µ c√°c ngu·ªìn t√†i li·ªáu uy t√≠n v√† th√†nh th·∫°o c√°c c√¥ng c·ª• h·ªó tr·ª£ cho qu√° tr√¨nh ƒë·ªçc t√†i li·ªáu/Papers, Hi·ªán th·ª±c Code v√† X√¢y d·ª±ng t√†i li·ªáu s·∫Ω gi√∫p cho c√°c h·ªçc vi√™n AIO hi·ªáu qu·∫£ h∆°n v·ªõi ch·∫∑ng ƒë∆∞·ªùng su·ªët kh√≥a h·ªçc.</p>]]></content><author><name></name></author><category term="Python"/><category term="L·∫≠p tr√¨nh c∆° b·∫£n"/><category term="Week1"/><summary type="html"><![CDATA[Recap Ki·∫øn Th·ª©c Tu·∫ßn 1 - AIO 2025]]></summary></entry><entry><title type="html">T√¨m hi·ªÉu v·ªÅ v√≤ng l·∫∑p trong Python</title><link href="https://luc1dddm.github.io/blog/2025/test-post/" rel="alternate" type="text/html" title="T√¨m hi·ªÉu v·ªÅ v√≤ng l·∫∑p trong Python"/><published>2025-06-09T00:00:00+00:00</published><updated>2025-06-09T00:00:00+00:00</updated><id>https://luc1dddm.github.io/blog/2025/test-post</id><content type="html" xml:base="https://luc1dddm.github.io/blog/2025/test-post/"><![CDATA[<h2 id="v√≤ng-l·∫∑p-trong-python">V√≤ng l·∫∑p trong Python</h2> <h3 id="ƒë·∫∑t-v·∫•n-ƒë·ªÅ">ƒê·∫∑t v·∫•n ƒë·ªÅ</h3> <p>V√≠ d·ª•, ch√∫ng ta ƒë∆∞·ª£c giao nhi·ªám v·ª• in d√≤ng ch·ªØ ‚ÄúHello World!‚Äù 5 l·∫ßn. Ta c√≥ th·ªÉ vi·∫øt:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World!</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <p>Nh∆∞ng n·∫øu ph·∫£i in 1000 hay 100000 l·∫ßn th√¨ sao? Vi·ªác copy-paste nh∆∞ tr√™n kh√¥ng c√≤n hi·ªáu qu·∫£. Gi·∫£i ph√°p t·ªëi ∆∞u l√† <strong>s·ª≠ d·ª•ng v√≤ng l·∫∑p</strong> ƒë·ªÉ th·ª±c hi·ªán thao t√°c l·∫∑p l·∫°i m·ªôt c√°ch hi·ªáu qu·∫£ h∆°n.</p> <hr/> <h3 id="ƒë·ªãnh-nghƒ©a-v√≤ng-l·∫∑p">ƒê·ªãnh nghƒ©a v√≤ng l·∫∑p</h3> <p><strong>V√≤ng l·∫∑p</strong> cho ph√©p ch√∫ng ta <strong>l·∫∑p l·∫°i m·ªôt kh·ªëi m√£</strong> d·ª±a tr√™n m·ªôt ƒëi·ªÅu ki·ªán ho·∫∑c d·ª±a tr√™n c√°c ph·∫ßn t·ª≠ c·ªßa m·ªôt t·∫≠p h·ª£p.</p> <hr/> <h2 id="v√≤ng-l·∫∑p-for">V√≤ng l·∫∑p <code class="language-plaintext highlighter-rouge">for</code></h2> <p>V√≤ng l·∫∑p <code class="language-plaintext highlighter-rouge">for</code> ƒë∆∞·ª£c d√πng ƒë·ªÉ l·∫∑p qua c√°c ph·∫ßn t·ª≠ c·ªßa m·ªôt <strong>ƒë·ªëi t∆∞·ª£ng l·∫∑p</strong> (<code class="language-plaintext highlighter-rouge">iterable</code>) nh∆∞ chu·ªói (string), danh s√°ch (list), tuple, dictionary, v.v.</p> <div class="row mt-3"> <div class="col-full mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Blog/Week1/ForLoop-480.webp 480w,/assets/img/Blog/Week1/ForLoop-800.webp 800w,/assets/img/Blog/Week1/ForLoop-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/Blog/Week1/ForLoop.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> H√¨nh n: C√∫ ph√°p v√† lu·ªìng th·ª±c thi c·ªßa v√≤ng l·∫∑p `for`. </div> <h3 id="c√∫-ph√°p">C√∫ ph√°p</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># code tr∆∞·ªõc for
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">iterable</span><span class="p">:</span>
    <span class="c1"># kh·ªëi m√£ c·∫ßn th·ª±c thi
# code sau for
</span></code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">for</code>, <code class="language-plaintext highlighter-rouge">in</code>: l√† c√°c <strong>t·ª´ kh√≥a (keywords)</strong> c·ªßa Python.</li> <li><code class="language-plaintext highlighter-rouge">:</code> (d·∫•u hai ch·∫•m): <strong>b·∫Øt bu·ªôc</strong> sau ph·∫ßn ƒëi·ªÅu ki·ªán c·ªßa v√≤ng l·∫∑p.</li> <li><strong>Th·ª•t l·ªÅ (indentation)</strong>: x√°c ƒë·ªãnh kh·ªëi m√£ thu·ªôc v√≤ng l·∫∑p.</li> </ul> <h3 id="lu·ªìng-th·ª±c-thi">Lu·ªìng th·ª±c thi</h3> <ol> <li><strong>Code tr∆∞·ªõc for</strong> (n·∫øu c√≥) ƒë∆∞·ª£c th·ª±c thi ƒë·∫ßu ti√™n.</li> <li> <p>M·ªói l·∫ßn l·∫∑p:</p> <ul> <li>G√°n ph·∫ßn t·ª≠ hi·ªán t·∫°i cho bi·∫øn l·∫∑p <code class="language-plaintext highlighter-rouge">i</code>.</li> <li>Th·ª±c thi <strong>code b√™n trong v√≤ng l·∫∑p</strong>.</li> </ul> </li> <li>Sau khi k·∫øt th√∫c, <strong>code sau for</strong> (n·∫øu c√≥) s·∫Ω ƒë∆∞·ª£c th·ª±c thi.</li> </ol> <h3 id="s·ª≠-d·ª•ng-range">S·ª≠ d·ª•ng <code class="language-plaintext highlighter-rouge">range()</code></h3> <p><code class="language-plaintext highlighter-rouge">range(n)</code> t·∫°o ra m·ªôt d√£y s·ªë t·ª´ <code class="language-plaintext highlighter-rouge">0</code> ƒë·∫øn <code class="language-plaintext highlighter-rouge">n - 1</code>. V√≠ d·ª•:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <p>K·∫øt qu·∫£:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
1
2
3
4
</code></pre></div></div> <hr/> <h2 id="v√≤ng-l·∫∑p-while">V√≤ng l·∫∑p <code class="language-plaintext highlighter-rouge">while</code></h2> <p>V√≤ng l·∫∑p <code class="language-plaintext highlighter-rouge">while</code> l·∫∑p l·∫°i <strong>mi·ªÖn l√† ƒëi·ªÅu ki·ªán v·∫´n ƒë√∫ng (<code class="language-plaintext highlighter-rouge">True</code>)</strong>.</p> <div class="row mt-3"> <div class="col-full mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Blog/Week1/WhileLoop-480.webp 480w,/assets/img/Blog/Week1/WhileLoop-800.webp 800w,/assets/img/Blog/Week1/WhileLoop-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/Blog/Week1/WhileLoop.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> H√¨nh n: C√∫ ph√°p v√† lu·ªìng th·ª±c thi c·ªßa v√≤ng l·∫∑p `while`. </div> <h3 id="c√∫-ph√°p-1">C√∫ ph√°p</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># code tr∆∞·ªõc while
</span><span class="k">while</span> <span class="n">condition</span><span class="p">:</span>
    <span class="c1"># kh·ªëi m√£ c·∫ßn th·ª±c thi
# code sau while
</span></code></pre></div></div> <h3 id="lu·ªìng-th·ª±c-thi-1">Lu·ªìng th·ª±c thi</h3> <ol> <li><strong>Code tr∆∞·ªõc while</strong> ƒë∆∞·ª£c th·ª±c thi tr∆∞·ªõc (n·∫øu c√≥).</li> <li> <p>Trong m·ªói l·∫ßn l·∫∑p:</p> <ul> <li>N·∫øu ƒëi·ªÅu ki·ªán ƒë√∫ng, <strong>code trong while</strong> ƒë∆∞·ª£c ch·∫°y.</li> <li>Sau ƒë√≥ ki·ªÉm tra l·∫°i ƒëi·ªÅu ki·ªán.</li> </ul> </li> <li>Khi ƒëi·ªÅu ki·ªán tr·ªü th√†nh <strong>False</strong>, v√≤ng l·∫∑p k·∫øt th√∫c v√† <strong>code sau while</strong> (n·∫øu c√≥) s·∫Ω ƒë∆∞·ª£c th·ª±c thi.</li> </ol> <h3 id="v√≠-d·ª•">V√≠ d·ª•</h3> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">done</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div> <p>K·∫øt qu·∫£:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
1
2
3
4
done
</code></pre></div></div> <hr/> <h2 id="break-v√†-continue-trong-v√≤ng-l·∫∑p"><code class="language-plaintext highlighter-rouge">break</code> v√† <code class="language-plaintext highlighter-rouge">continue</code> trong v√≤ng l·∫∑p</h2> <h3 id="break"><code class="language-plaintext highlighter-rouge">break</code></h3> <p><code class="language-plaintext highlighter-rouge">break</code> ƒë∆∞·ª£c d√πng ƒë·ªÉ <strong>tho√°t ho√†n to√†n kh·ªèi v√≤ng l·∫∑p</strong>, ngay c·∫£ khi ƒëi·ªÅu ki·ªán ho·∫∑c danh s√°ch ch∆∞a k·∫øt th√∫c.</p> <h4 id="v√≠-d·ª•-1">V√≠ d·ª•</h4> <p>T√¨m v·ªã tr√≠ ƒë·∫ßu ti√™n c·ªßa ph·∫ßn t·ª≠ c√≥ gi√° tr·ªã l√† 5:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">9</span><span class="p">]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">numbers</span><span class="p">)):</span>
    <span class="k">if</span> <span class="n">numbers</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">5</span><span class="p">:</span>
        <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">Found 5 at index </span><span class="si">{</span><span class="n">i</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
        <span class="k">break</span>
</code></pre></div></div> <p><strong>Gi·∫£i th√≠ch:</strong> Khi t√¨m th·∫•y ph·∫ßn t·ª≠ ƒë·∫ßu ti√™n b·∫±ng 5, v√≤ng l·∫∑p d·ª´ng ngay l·∫≠p t·ª©c nh·ªù <code class="language-plaintext highlighter-rouge">break</code>.</p> <hr/> <h3 id="continue"><code class="language-plaintext highlighter-rouge">continue</code></h3> <p><code class="language-plaintext highlighter-rouge">continue</code> ƒë∆∞·ª£c d√πng ƒë·ªÉ <strong>b·ªè qua ph·∫ßn c√≤n l·∫°i c·ªßa kh·ªëi m√£ trong l·∫ßn l·∫∑p hi·ªán t·∫°i</strong> v√† <strong>chuy·ªÉn sang l·∫ßn l·∫∑p ti·∫øp theo</strong>.</p> <h4 id="v√≠-d·ª•-2">V√≠ d·ª•</h4> <p>In c√°c s·ªë t·ª´ 1 ƒë·∫øn 10, <strong>b·ªè qua c√°c s·ªë ch·∫µn</strong>, d√πng <code class="language-plaintext highlighter-rouge">while</code>:</p> <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
<span class="k">while</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>
    <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">if</span> <span class="n">i</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">continue</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div> <p><strong>Gi·∫£i th√≠ch:</strong> Khi g·∫∑p s·ªë ch·∫µn, <code class="language-plaintext highlighter-rouge">continue</code> khi·∫øn v√≤ng l·∫∑p b·ªè qua l·ªánh <code class="language-plaintext highlighter-rouge">print(i)</code> v√† quay l·∫°i ƒë·∫ßu v√≤ng l·∫∑p.</p> <p>K·∫øt qu·∫£:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1
3
5
7
9
</code></pre></div></div> <hr/> <h2 id="k·∫øt-lu·∫≠n">K·∫øt lu·∫≠n</h2> <p>V√≤ng l·∫∑p l√† m·ªôt c√¥ng c·ª• r·∫•t m·∫°nh trong l·∫≠p tr√¨nh gi√∫p th·ª±c hi·ªán c√°c t√°c v·ª• l·∫∑p ƒëi l·∫∑p l·∫°i m·ªôt c√°ch hi·ªáu qu·∫£. Vi·ªác hi·ªÉu v√† v·∫≠n d·ª•ng ƒë√∫ng c√°c lo·∫°i v√≤ng l·∫∑p (<code class="language-plaintext highlighter-rouge">for</code>, <code class="language-plaintext highlighter-rouge">while</code>) c√πng v·ªõi c√°c t·ª´ kh√≥a ƒëi·ªÅu khi·ªÉn (<code class="language-plaintext highlighter-rouge">break</code>, <code class="language-plaintext highlighter-rouge">continue</code>) s·∫Ω gi√∫p b·∫°n vi·∫øt m√£ ng·∫Øn g·ªçn, d·ªÖ hi·ªÉu v√† t·ªëi ∆∞u h∆°n r·∫•t nhi·ªÅu.</p>]]></content><author><name></name></author><category term="Python"/><category term="L·∫≠p tr√¨nh c∆° b·∫£n"/><category term="Week1"/><summary type="html"><![CDATA[V√≤ng l·∫∑p trong Python]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://luc1dddm.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://luc1dddm.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://luc1dddm.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[<p>May 14, 2024[[read-time]] min read We‚Äôre introducing a series of updates across the Gemini family of models, including the new 1.5 Flash, our lightweight model for speed and efficiency, and Project Astra, our vision for the future of AI assistants. In December, we launched our first natively multimodal model Gemini 1.0 in three sizes: Ultra, Pro and Nano. Just a few months later we released 1.5 Pro, with enhanced performance and a breakthrough long context window of 1 million tokens.Developers and enterprise customers have been putting 1.5 Pro to use in incredible ways and finding its long context window, multimodal reasoning capabilities and impressive overall performance incredibly useful.We know from user feedback that some applications need lower latency and a lower cost to serve. This inspired us to keep innovating, so today, we‚Äôre introducing Gemini 1.5 Flash: a model that‚Äôs lighter-weight than 1.5 Pro, and designed to be fast and efficient to serve at scale.Both 1.5 Pro and 1.5 Flash are available in public preview with a 1 million token context window in Google AI Studio and Vertex AI. And now, 1.5 Pro is also available with a 2 million token context window via waitlist to developers using the API and to Google Cloud customers.We‚Äôre also introducing updates across the Gemini family of models, announcing our next generation of open models, Gemma 2, and sharing progress on the future of AI assistants, with Project Astra.Context lengths of leading foundation models compared with Gemini 1.5‚Äôs 2 million token capability1.5 Flash is the newest addition to the Gemini model family and the fastest Gemini model served in the API. It‚Äôs optimized for high-volume, high-frequency tasks at scale, is more cost-efficient to serve and features our breakthrough long context window.While it‚Äôs a lighter weight model than 1.5 Pro, it‚Äôs highly capable of multimodal reasoning across vast amounts of information and delivers impressive quality for its size.The new Gemini 1.5 Flash model is optimized for speed and efficiency, is highly capable of multimodal reasoning and features our breakthrough long context window.1.5 Flash excels at summarization, chat applications, image and video captioning, data extraction from long documents and tables, and more. This is because it‚Äôs been trained by 1.5 Pro through a process called ‚Äúdistillation,‚Äù where the most essential knowledge and skills from a larger model are transferred to a smaller, more efficient model.Read more about 1.5 Flash in our updated Gemini 1.5 technical report, on the Gemini technology page, and learn about 1.5 Flash‚Äôs availability and pricing.Over the last few months, we‚Äôve significantly improved 1.5 Pro, our best model for general performance across a wide range of tasks.Beyond extending its context window to 2 million tokens, we‚Äôve enhanced its code generation, logical reasoning and planning, multi-turn conversation, and audio and image understanding through data and algorithmic advances. We see strong improvements on public and internal benchmarks for each of these tasks.1.5 Pro can now follow increasingly complex and nuanced instructions, including ones that specify product-level behavior involving role, format and style. We‚Äôve improved control over the model‚Äôs responses for specific use cases, like crafting the persona and response style of a chat agent or automating workflows through multiple function calls. And we‚Äôve enabled users to steer model behavior by setting system instructions.We added audio understanding in the Gemini API and Google AI Studio, so 1.5 Pro can now reason across image and audio for videos uploaded in Google AI Studio. And we‚Äôre now integrating 1.5 Pro into Google products, including Gemini Advanced and in Workspace apps.Read more about 1.5 Pro in our updated Gemini 1.5 technical report and on the Gemini technology page.Gemini Nano is expanding beyond text-only inputs to include images as well. Starting with Pixel, applications using Gemini Nano with Multimodality will be able to understand the world the way people do ‚Äî not just through text, but also through sight, sound and spoken language.Read more about Gemini 1.0 Nano on Android.Today, we‚Äôre also sharing a series of updates to Gemma, our family of open models built from the same research and technology used to create the Gemini models.We‚Äôre announcing Gemma 2, our next generation of open models for responsible AI innovation. Gemma 2 has a new architecture designed for breakthrough performance and efficiency, and will be available in new sizes.The Gemma family is also expanding with PaliGemma, our first vision-language model inspired by PaLI-3. And we‚Äôve upgraded our Responsible Generative AI Toolkit with LLM Comparator for evaluating the quality of model responses.Read more on the Developer blog.As part of Google DeepMind‚Äôs mission to build AI responsibly to benefit humanity, we‚Äôve always wanted to develop universal AI agents that can be helpful in everyday life. That‚Äôs why today, we‚Äôre sharing our progress in building the future of AI assistants with Project Astra (advanced seeing and talking responsive agent).To be truly useful, an agent needs to understand and respond to the complex and dynamic world just like people do ‚Äî and take in and remember what it sees and hears to understand context and take action. It also needs to be proactive, teachable and personal, so users can talk to it naturally and without lag or delay.While we‚Äôve made incredible progress developing AI systems that can understand multimodal information, getting response time down to something conversational is a difficult engineering challenge. Over the past few years, we‚Äôve been working to improve how our models perceive, reason and converse to make the pace and quality of interaction feel more natural.Building on Gemini, we‚Äôve developed prototype agents that can process information faster by continuously encoding video frames, combining the video and speech input into a timeline of events, and caching this information for efficient recall.By leveraging our leading speech models, we also enhanced how they sound, giving the agents a wider range of intonations. These agents can better understand the context they‚Äôre being used in, and respond quickly, in conversation.With technology like this, it‚Äôs easy to envision a future where people could have an expert AI assistant by their side, through a phone or glasses. And some of these capabilities are coming to Google products, like the Gemini app and web experience, later this year.We‚Äôve made incredible progress so far with our family of Gemini models, and we‚Äôre always striving to advance the state-of-the-art even further. By investing in a relentless production line of innovation, we‚Äôre able to explore new ideas at the frontier, while also unlocking the possibility of new and exciting Gemini use cases.Learn more about Gemini and its capabilities. Your information will be used in accordance with Google‚Äôs privacy policy.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>      Done. Just one step more.
    
      Check your inbox to confirm your subscription.
    You are already subscribed to our newsletter.
    You can also subscribe with a
    different email address
    
    .
    
  Let‚Äôs stay in touch. Get the latest news from Google in your inbox.
          Follow Us
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[We‚Äôre sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://luc1dddm.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://luc1dddm.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://luc1dddm.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[<h3>External Posts on Your al-folio¬†Blog</h3> <p>If you prefer publishing blog posts on medium.com or other external sources, starting version v0.5.0, <a href="https://github.com/alshedivat/al-folio">al-folio</a> lets you to display your external posts in the blog feed of your website!¬†üéâüéâ</p> <p>Configuring external sources of super simple. After upgrading to v0.5.0, just add the following section to your _config.yml:</p> <pre>external_sources:<br />  - name: medium.com  # name of the source (arbitrary string)<br />    rss_url: <a href="https://medium.com/@al-folio/feed">https://medium.com/@&lt;your-medium-username&gt;/feed</a></pre> <p>The example above adds your medium.com blog post feed as an external source. But you can add arbitrary RSS feeds as¬†sources.</p> <p>Any questions or suggestions? üëâ Start <a href="https://github.com/alshedivat/al-folio/discussions">a discussion on¬†GitHub</a>!</p> <p><img src="https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b60a1d241a0a" width="1" height="1" alt=""/></p>]]></content><author><name></name></author></entry></feed>